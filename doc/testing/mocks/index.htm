<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="theme-color" content="#375EAB">

  <title>mocks - Go Documentation Server</title>

<link type="text/css" rel="stylesheet" href="/lib/godoc/style.css">

<script>window.initFuncs = [];</script>
<script src="/lib/godoc/jquery.js" defer></script>



<script>var goVersion = "go1.16.3";</script>
<script src="/lib/godoc/godocs.js" defer></script>
</head>
<body>

<div id='lowframe' style="position: fixed; bottom: 0; left: 0; height: 0; width: 100%; border-top: thin solid grey; background-color: white; overflow: auto;">
...
</div><!-- #lowframe -->

<div id="topbar" class="wide"><div class="container">
<div class="top-heading" id="heading-wide"><a href="/pkg/">Go Documentation Server</a></div>
<div class="top-heading" id="heading-narrow"><a href="/pkg/">GoDoc</a></div>
<a href="#" id="menu-button"><span id="menu-button-arrow">&#9661;</span></a>
<form method="GET" action="/search">
<div id="menu">

<span class="search-box"><input type="search" id="search" name="q" placeholder="Search" aria-label="Search" required><button type="submit"><span><!-- magnifying glass: --><svg width="24" height="24" viewBox="0 0 24 24"><title>submit search</title><path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/><path d="M0 0h24v24H0z" fill="none"/></svg></span></button></span>
</div>
</form>

</div></div>



<div id="page" class="wide">
<div class="container">


  <h1>
    Package mocks
    <span class="text-muted"></span>
  </h1>







<div id="nav"></div>


<!--
	Copyright 2009 The Go Authors. All rights reserved.
	Use of this source code is governed by a BSD-style
	license that can be found in the LICENSE file.
-->
<!--
	Note: Static (i.e., not template-generated) href and id
	attributes start with "pkg-" to make it impossible for
	them to conflict with generated attributes (some of which
	correspond to Go identifiers).
-->

	<script>
	document.ANALYSIS_DATA = null;
	document.CALLGRAPH = null;
	</script>

	
		
		<div id="short-nav">
			<dl>
			<dd><code>import "github.com/kmilodenisglez/cc-identity-go/testing/mocks"</code></dd>
			</dl>
			<dl>
			<dd><a href="#pkg-overview" class="overviewLink">Overview</a></dd>
			<dd><a href="#pkg-index" class="indexLink">Index</a></dd>
			
			
			</dl>
		</div>
		<!-- The package's Name is printed as title by the top-level template -->
		<div id="pkg-overview" class="toggleVisible">
			<div class="collapsed">
				<h2 class="toggleButton" title="Click to show Overview section">Overview ▹</h2>
			</div>
			<div class="expanded">
				<h2 class="toggleButton" title="Click to hide Overview section">Overview ▾</h2>
				<p>
Code generated by counterfeiter. DO NOT EDIT.
</p>
<p>
Code generated by counterfeiter. DO NOT EDIT.
</p>
<p>
Code generated by counterfeiter. DO NOT EDIT.
</p>
<p>
Code generated by counterfeiter. DO NOT EDIT.
</p>
<p>
Code generated by counterfeiter. DO NOT EDIT.
</p>
<p>
Code generated by counterfeiter. DO NOT EDIT.
</p>
<p>
Code generated by counterfeiter. DO NOT EDIT.
</p>
<p>
Code generated by counterfeiter. DO NOT EDIT.
</p>

				
			</div>
		</div>

		<div id="pkg-index" class="toggleVisible">
		<div class="collapsed">
			<h2 class="toggleButton" title="Click to show Index section">Index ▹</h2>
		</div>
		<div class="expanded">
			<h2 class="toggleButton" title="Click to hide Index section">Index ▾</h2>

		<!-- Table of contents for API; must be named manual-nav to turn off auto nav. -->
			<div id="manual-nav">
			<dl>
			
			
			
			
				
				<dd><a href="#ChaincodeStub">type ChaincodeStub</a></dd>
				
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.CreateCompositeKey">func (fake *ChaincodeStub) CreateCompositeKey(arg1 string, arg2 []string) (string, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.CreateCompositeKeyArgsForCall">func (fake *ChaincodeStub) CreateCompositeKeyArgsForCall(i int) (string, []string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.CreateCompositeKeyCallCount">func (fake *ChaincodeStub) CreateCompositeKeyCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.CreateCompositeKeyCalls">func (fake *ChaincodeStub) CreateCompositeKeyCalls(stub func(string, []string) (string, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.CreateCompositeKeyReturns">func (fake *ChaincodeStub) CreateCompositeKeyReturns(result1 string, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.CreateCompositeKeyReturnsOnCall">func (fake *ChaincodeStub) CreateCompositeKeyReturnsOnCall(i int, result1 string, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.DelPrivateData">func (fake *ChaincodeStub) DelPrivateData(arg1 string, arg2 string) error</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.DelPrivateDataArgsForCall">func (fake *ChaincodeStub) DelPrivateDataArgsForCall(i int) (string, string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.DelPrivateDataCallCount">func (fake *ChaincodeStub) DelPrivateDataCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.DelPrivateDataCalls">func (fake *ChaincodeStub) DelPrivateDataCalls(stub func(string, string) error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.DelPrivateDataReturns">func (fake *ChaincodeStub) DelPrivateDataReturns(result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.DelPrivateDataReturnsOnCall">func (fake *ChaincodeStub) DelPrivateDataReturnsOnCall(i int, result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.DelState">func (fake *ChaincodeStub) DelState(arg1 string) error</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.DelStateArgsForCall">func (fake *ChaincodeStub) DelStateArgsForCall(i int) string</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.DelStateCallCount">func (fake *ChaincodeStub) DelStateCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.DelStateCalls">func (fake *ChaincodeStub) DelStateCalls(stub func(string) error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.DelStateReturns">func (fake *ChaincodeStub) DelStateReturns(result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.DelStateReturnsOnCall">func (fake *ChaincodeStub) DelStateReturnsOnCall(i int, result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetArgs">func (fake *ChaincodeStub) GetArgs() [][]byte</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetArgsCallCount">func (fake *ChaincodeStub) GetArgsCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetArgsCalls">func (fake *ChaincodeStub) GetArgsCalls(stub func() [][]byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetArgsReturns">func (fake *ChaincodeStub) GetArgsReturns(result1 [][]byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetArgsReturnsOnCall">func (fake *ChaincodeStub) GetArgsReturnsOnCall(i int, result1 [][]byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetArgsSlice">func (fake *ChaincodeStub) GetArgsSlice() ([]byte, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetArgsSliceCallCount">func (fake *ChaincodeStub) GetArgsSliceCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetArgsSliceCalls">func (fake *ChaincodeStub) GetArgsSliceCalls(stub func() ([]byte, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetArgsSliceReturns">func (fake *ChaincodeStub) GetArgsSliceReturns(result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetArgsSliceReturnsOnCall">func (fake *ChaincodeStub) GetArgsSliceReturnsOnCall(i int, result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetBinding">func (fake *ChaincodeStub) GetBinding() ([]byte, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetBindingCallCount">func (fake *ChaincodeStub) GetBindingCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetBindingCalls">func (fake *ChaincodeStub) GetBindingCalls(stub func() ([]byte, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetBindingReturns">func (fake *ChaincodeStub) GetBindingReturns(result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetBindingReturnsOnCall">func (fake *ChaincodeStub) GetBindingReturnsOnCall(i int, result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetChannelID">func (fake *ChaincodeStub) GetChannelID() string</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetChannelIDCallCount">func (fake *ChaincodeStub) GetChannelIDCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetChannelIDCalls">func (fake *ChaincodeStub) GetChannelIDCalls(stub func() string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetChannelIDReturns">func (fake *ChaincodeStub) GetChannelIDReturns(result1 string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetChannelIDReturnsOnCall">func (fake *ChaincodeStub) GetChannelIDReturnsOnCall(i int, result1 string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetCreator">func (fake *ChaincodeStub) GetCreator() ([]byte, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetCreatorCallCount">func (fake *ChaincodeStub) GetCreatorCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetCreatorCalls">func (fake *ChaincodeStub) GetCreatorCalls(stub func() ([]byte, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetCreatorReturns">func (fake *ChaincodeStub) GetCreatorReturns(result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetCreatorReturnsOnCall">func (fake *ChaincodeStub) GetCreatorReturnsOnCall(i int, result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetDecorations">func (fake *ChaincodeStub) GetDecorations() map[string][]byte</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetDecorationsCallCount">func (fake *ChaincodeStub) GetDecorationsCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetDecorationsCalls">func (fake *ChaincodeStub) GetDecorationsCalls(stub func() map[string][]byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetDecorationsReturns">func (fake *ChaincodeStub) GetDecorationsReturns(result1 map[string][]byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetDecorationsReturnsOnCall">func (fake *ChaincodeStub) GetDecorationsReturnsOnCall(i int, result1 map[string][]byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetFunctionAndParameters">func (fake *ChaincodeStub) GetFunctionAndParameters() (string, []string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetFunctionAndParametersCallCount">func (fake *ChaincodeStub) GetFunctionAndParametersCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetFunctionAndParametersCalls">func (fake *ChaincodeStub) GetFunctionAndParametersCalls(stub func() (string, []string))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetFunctionAndParametersReturns">func (fake *ChaincodeStub) GetFunctionAndParametersReturns(result1 string, result2 []string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetFunctionAndParametersReturnsOnCall">func (fake *ChaincodeStub) GetFunctionAndParametersReturnsOnCall(i int, result1 string, result2 []string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetHistoryForKey">func (fake *ChaincodeStub) GetHistoryForKey(arg1 string) (shim.HistoryQueryIteratorInterface, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetHistoryForKeyArgsForCall">func (fake *ChaincodeStub) GetHistoryForKeyArgsForCall(i int) string</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetHistoryForKeyCallCount">func (fake *ChaincodeStub) GetHistoryForKeyCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetHistoryForKeyCalls">func (fake *ChaincodeStub) GetHistoryForKeyCalls(stub func(string) (shim.HistoryQueryIteratorInterface, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetHistoryForKeyReturns">func (fake *ChaincodeStub) GetHistoryForKeyReturns(result1 shim.HistoryQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetHistoryForKeyReturnsOnCall">func (fake *ChaincodeStub) GetHistoryForKeyReturnsOnCall(i int, result1 shim.HistoryQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateData">func (fake *ChaincodeStub) GetPrivateData(arg1 string, arg2 string) ([]byte, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataArgsForCall">func (fake *ChaincodeStub) GetPrivateDataArgsForCall(i int) (string, string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataByPartialCompositeKey">func (fake *ChaincodeStub) GetPrivateDataByPartialCompositeKey(arg1 string, arg2 string, arg3 []string) (shim.StateQueryIteratorInterface, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataByPartialCompositeKeyArgsForCall">func (fake *ChaincodeStub) GetPrivateDataByPartialCompositeKeyArgsForCall(i int) (string, string, []string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataByPartialCompositeKeyCallCount">func (fake *ChaincodeStub) GetPrivateDataByPartialCompositeKeyCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataByPartialCompositeKeyCalls">func (fake *ChaincodeStub) GetPrivateDataByPartialCompositeKeyCalls(stub func(string, string, []string) (shim.StateQueryIteratorInterface, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataByPartialCompositeKeyReturns">func (fake *ChaincodeStub) GetPrivateDataByPartialCompositeKeyReturns(result1 shim.StateQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataByPartialCompositeKeyReturnsOnCall">func (fake *ChaincodeStub) GetPrivateDataByPartialCompositeKeyReturnsOnCall(i int, result1 shim.StateQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataByRange">func (fake *ChaincodeStub) GetPrivateDataByRange(arg1 string, arg2 string, arg3 string) (shim.StateQueryIteratorInterface, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataByRangeArgsForCall">func (fake *ChaincodeStub) GetPrivateDataByRangeArgsForCall(i int) (string, string, string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataByRangeCallCount">func (fake *ChaincodeStub) GetPrivateDataByRangeCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataByRangeCalls">func (fake *ChaincodeStub) GetPrivateDataByRangeCalls(stub func(string, string, string) (shim.StateQueryIteratorInterface, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataByRangeReturns">func (fake *ChaincodeStub) GetPrivateDataByRangeReturns(result1 shim.StateQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataByRangeReturnsOnCall">func (fake *ChaincodeStub) GetPrivateDataByRangeReturnsOnCall(i int, result1 shim.StateQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataCallCount">func (fake *ChaincodeStub) GetPrivateDataCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataCalls">func (fake *ChaincodeStub) GetPrivateDataCalls(stub func(string, string) ([]byte, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataHash">func (fake *ChaincodeStub) GetPrivateDataHash(arg1 string, arg2 string) ([]byte, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataHashArgsForCall">func (fake *ChaincodeStub) GetPrivateDataHashArgsForCall(i int) (string, string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataHashCallCount">func (fake *ChaincodeStub) GetPrivateDataHashCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataHashCalls">func (fake *ChaincodeStub) GetPrivateDataHashCalls(stub func(string, string) ([]byte, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataHashReturns">func (fake *ChaincodeStub) GetPrivateDataHashReturns(result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataHashReturnsOnCall">func (fake *ChaincodeStub) GetPrivateDataHashReturnsOnCall(i int, result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataQueryResult">func (fake *ChaincodeStub) GetPrivateDataQueryResult(arg1 string, arg2 string) (shim.StateQueryIteratorInterface, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataQueryResultArgsForCall">func (fake *ChaincodeStub) GetPrivateDataQueryResultArgsForCall(i int) (string, string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataQueryResultCallCount">func (fake *ChaincodeStub) GetPrivateDataQueryResultCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataQueryResultCalls">func (fake *ChaincodeStub) GetPrivateDataQueryResultCalls(stub func(string, string) (shim.StateQueryIteratorInterface, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataQueryResultReturns">func (fake *ChaincodeStub) GetPrivateDataQueryResultReturns(result1 shim.StateQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataQueryResultReturnsOnCall">func (fake *ChaincodeStub) GetPrivateDataQueryResultReturnsOnCall(i int, result1 shim.StateQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataReturns">func (fake *ChaincodeStub) GetPrivateDataReturns(result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataReturnsOnCall">func (fake *ChaincodeStub) GetPrivateDataReturnsOnCall(i int, result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataValidationParameter">func (fake *ChaincodeStub) GetPrivateDataValidationParameter(arg1 string, arg2 string) ([]byte, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataValidationParameterArgsForCall">func (fake *ChaincodeStub) GetPrivateDataValidationParameterArgsForCall(i int) (string, string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataValidationParameterCallCount">func (fake *ChaincodeStub) GetPrivateDataValidationParameterCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataValidationParameterCalls">func (fake *ChaincodeStub) GetPrivateDataValidationParameterCalls(stub func(string, string) ([]byte, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataValidationParameterReturns">func (fake *ChaincodeStub) GetPrivateDataValidationParameterReturns(result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetPrivateDataValidationParameterReturnsOnCall">func (fake *ChaincodeStub) GetPrivateDataValidationParameterReturnsOnCall(i int, result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetQueryResult">func (fake *ChaincodeStub) GetQueryResult(arg1 string) (shim.StateQueryIteratorInterface, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetQueryResultArgsForCall">func (fake *ChaincodeStub) GetQueryResultArgsForCall(i int) string</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetQueryResultCallCount">func (fake *ChaincodeStub) GetQueryResultCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetQueryResultCalls">func (fake *ChaincodeStub) GetQueryResultCalls(stub func(string) (shim.StateQueryIteratorInterface, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetQueryResultReturns">func (fake *ChaincodeStub) GetQueryResultReturns(result1 shim.StateQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetQueryResultReturnsOnCall">func (fake *ChaincodeStub) GetQueryResultReturnsOnCall(i int, result1 shim.StateQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetQueryResultWithPagination">func (fake *ChaincodeStub) GetQueryResultWithPagination(arg1 string, arg2 int32, arg3 string) (shim.StateQueryIteratorInterface, *peer.QueryResponseMetadata, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetQueryResultWithPaginationArgsForCall">func (fake *ChaincodeStub) GetQueryResultWithPaginationArgsForCall(i int) (string, int32, string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetQueryResultWithPaginationCallCount">func (fake *ChaincodeStub) GetQueryResultWithPaginationCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetQueryResultWithPaginationCalls">func (fake *ChaincodeStub) GetQueryResultWithPaginationCalls(stub func(string, int32, string) (shim.StateQueryIteratorInterface, *peer.QueryResponseMetadata, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetQueryResultWithPaginationReturns">func (fake *ChaincodeStub) GetQueryResultWithPaginationReturns(result1 shim.StateQueryIteratorInterface, result2 *peer.QueryResponseMetadata, result3 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetQueryResultWithPaginationReturnsOnCall">func (fake *ChaincodeStub) GetQueryResultWithPaginationReturnsOnCall(i int, result1 shim.StateQueryIteratorInterface, result2 *peer.QueryResponseMetadata, result3 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetSignedProposal">func (fake *ChaincodeStub) GetSignedProposal() (*peer.SignedProposal, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetSignedProposalCallCount">func (fake *ChaincodeStub) GetSignedProposalCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetSignedProposalCalls">func (fake *ChaincodeStub) GetSignedProposalCalls(stub func() (*peer.SignedProposal, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetSignedProposalReturns">func (fake *ChaincodeStub) GetSignedProposalReturns(result1 *peer.SignedProposal, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetSignedProposalReturnsOnCall">func (fake *ChaincodeStub) GetSignedProposalReturnsOnCall(i int, result1 *peer.SignedProposal, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetState">func (fake *ChaincodeStub) GetState(arg1 string) ([]byte, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateArgsForCall">func (fake *ChaincodeStub) GetStateArgsForCall(i int) string</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByPartialCompositeKey">func (fake *ChaincodeStub) GetStateByPartialCompositeKey(arg1 string, arg2 []string) (shim.StateQueryIteratorInterface, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByPartialCompositeKeyArgsForCall">func (fake *ChaincodeStub) GetStateByPartialCompositeKeyArgsForCall(i int) (string, []string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByPartialCompositeKeyCallCount">func (fake *ChaincodeStub) GetStateByPartialCompositeKeyCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByPartialCompositeKeyCalls">func (fake *ChaincodeStub) GetStateByPartialCompositeKeyCalls(stub func(string, []string) (shim.StateQueryIteratorInterface, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByPartialCompositeKeyReturns">func (fake *ChaincodeStub) GetStateByPartialCompositeKeyReturns(result1 shim.StateQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByPartialCompositeKeyReturnsOnCall">func (fake *ChaincodeStub) GetStateByPartialCompositeKeyReturnsOnCall(i int, result1 shim.StateQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByPartialCompositeKeyWithPagination">func (fake *ChaincodeStub) GetStateByPartialCompositeKeyWithPagination(arg1 string, arg2 []string, arg3 int32, arg4 string) (shim.StateQueryIteratorInterface, *peer.QueryResponseMetadata, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationArgsForCall">func (fake *ChaincodeStub) GetStateByPartialCompositeKeyWithPaginationArgsForCall(i int) (string, []string, int32, string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationCallCount">func (fake *ChaincodeStub) GetStateByPartialCompositeKeyWithPaginationCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationCalls">func (fake *ChaincodeStub) GetStateByPartialCompositeKeyWithPaginationCalls(stub func(string, []string, int32, string) (shim.StateQueryIteratorInterface, *peer.QueryResponseMetadata, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationReturns">func (fake *ChaincodeStub) GetStateByPartialCompositeKeyWithPaginationReturns(result1 shim.StateQueryIteratorInterface, result2 *peer.QueryResponseMetadata, result3 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationReturnsOnCall">func (fake *ChaincodeStub) GetStateByPartialCompositeKeyWithPaginationReturnsOnCall(i int, result1 shim.StateQueryIteratorInterface, result2 *peer.QueryResponseMetadata, result3 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByRange">func (fake *ChaincodeStub) GetStateByRange(arg1 string, arg2 string) (shim.StateQueryIteratorInterface, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByRangeArgsForCall">func (fake *ChaincodeStub) GetStateByRangeArgsForCall(i int) (string, string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByRangeCallCount">func (fake *ChaincodeStub) GetStateByRangeCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByRangeCalls">func (fake *ChaincodeStub) GetStateByRangeCalls(stub func(string, string) (shim.StateQueryIteratorInterface, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByRangeReturns">func (fake *ChaincodeStub) GetStateByRangeReturns(result1 shim.StateQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByRangeReturnsOnCall">func (fake *ChaincodeStub) GetStateByRangeReturnsOnCall(i int, result1 shim.StateQueryIteratorInterface, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByRangeWithPagination">func (fake *ChaincodeStub) GetStateByRangeWithPagination(arg1 string, arg2 string, arg3 int32, arg4 string) (shim.StateQueryIteratorInterface, *peer.QueryResponseMetadata, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByRangeWithPaginationArgsForCall">func (fake *ChaincodeStub) GetStateByRangeWithPaginationArgsForCall(i int) (string, string, int32, string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByRangeWithPaginationCallCount">func (fake *ChaincodeStub) GetStateByRangeWithPaginationCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByRangeWithPaginationCalls">func (fake *ChaincodeStub) GetStateByRangeWithPaginationCalls(stub func(string, string, int32, string) (shim.StateQueryIteratorInterface, *peer.QueryResponseMetadata, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByRangeWithPaginationReturns">func (fake *ChaincodeStub) GetStateByRangeWithPaginationReturns(result1 shim.StateQueryIteratorInterface, result2 *peer.QueryResponseMetadata, result3 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateByRangeWithPaginationReturnsOnCall">func (fake *ChaincodeStub) GetStateByRangeWithPaginationReturnsOnCall(i int, result1 shim.StateQueryIteratorInterface, result2 *peer.QueryResponseMetadata, result3 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateCallCount">func (fake *ChaincodeStub) GetStateCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateCalls">func (fake *ChaincodeStub) GetStateCalls(stub func(string) ([]byte, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateReturns">func (fake *ChaincodeStub) GetStateReturns(result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateReturnsOnCall">func (fake *ChaincodeStub) GetStateReturnsOnCall(i int, result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateValidationParameter">func (fake *ChaincodeStub) GetStateValidationParameter(arg1 string) ([]byte, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateValidationParameterArgsForCall">func (fake *ChaincodeStub) GetStateValidationParameterArgsForCall(i int) string</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateValidationParameterCallCount">func (fake *ChaincodeStub) GetStateValidationParameterCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateValidationParameterCalls">func (fake *ChaincodeStub) GetStateValidationParameterCalls(stub func(string) ([]byte, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateValidationParameterReturns">func (fake *ChaincodeStub) GetStateValidationParameterReturns(result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStateValidationParameterReturnsOnCall">func (fake *ChaincodeStub) GetStateValidationParameterReturnsOnCall(i int, result1 []byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStringArgs">func (fake *ChaincodeStub) GetStringArgs() []string</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStringArgsCallCount">func (fake *ChaincodeStub) GetStringArgsCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStringArgsCalls">func (fake *ChaincodeStub) GetStringArgsCalls(stub func() []string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStringArgsReturns">func (fake *ChaincodeStub) GetStringArgsReturns(result1 []string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetStringArgsReturnsOnCall">func (fake *ChaincodeStub) GetStringArgsReturnsOnCall(i int, result1 []string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTransient">func (fake *ChaincodeStub) GetTransient() (map[string][]byte, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTransientCallCount">func (fake *ChaincodeStub) GetTransientCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTransientCalls">func (fake *ChaincodeStub) GetTransientCalls(stub func() (map[string][]byte, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTransientReturns">func (fake *ChaincodeStub) GetTransientReturns(result1 map[string][]byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTransientReturnsOnCall">func (fake *ChaincodeStub) GetTransientReturnsOnCall(i int, result1 map[string][]byte, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTxID">func (fake *ChaincodeStub) GetTxID() string</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTxIDCallCount">func (fake *ChaincodeStub) GetTxIDCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTxIDCalls">func (fake *ChaincodeStub) GetTxIDCalls(stub func() string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTxIDReturns">func (fake *ChaincodeStub) GetTxIDReturns(result1 string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTxIDReturnsOnCall">func (fake *ChaincodeStub) GetTxIDReturnsOnCall(i int, result1 string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTxTimestamp">func (fake *ChaincodeStub) GetTxTimestamp() (*timestamppb.Timestamp, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTxTimestampCallCount">func (fake *ChaincodeStub) GetTxTimestampCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTxTimestampCalls">func (fake *ChaincodeStub) GetTxTimestampCalls(stub func() (*timestamppb.Timestamp, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTxTimestampReturns">func (fake *ChaincodeStub) GetTxTimestampReturns(result1 *timestamppb.Timestamp, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.GetTxTimestampReturnsOnCall">func (fake *ChaincodeStub) GetTxTimestampReturnsOnCall(i int, result1 *timestamppb.Timestamp, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.Invocations">func (fake *ChaincodeStub) Invocations() map[string][][]interface{}</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.InvokeChaincode">func (fake *ChaincodeStub) InvokeChaincode(arg1 string, arg2 [][]byte, arg3 string) peer.Response</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.InvokeChaincodeArgsForCall">func (fake *ChaincodeStub) InvokeChaincodeArgsForCall(i int) (string, [][]byte, string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.InvokeChaincodeCallCount">func (fake *ChaincodeStub) InvokeChaincodeCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.InvokeChaincodeCalls">func (fake *ChaincodeStub) InvokeChaincodeCalls(stub func(string, [][]byte, string) peer.Response)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.InvokeChaincodeReturns">func (fake *ChaincodeStub) InvokeChaincodeReturns(result1 peer.Response)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.InvokeChaincodeReturnsOnCall">func (fake *ChaincodeStub) InvokeChaincodeReturnsOnCall(i int, result1 peer.Response)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.PutPrivateData">func (fake *ChaincodeStub) PutPrivateData(arg1 string, arg2 string, arg3 []byte) error</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.PutPrivateDataArgsForCall">func (fake *ChaincodeStub) PutPrivateDataArgsForCall(i int) (string, string, []byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.PutPrivateDataCallCount">func (fake *ChaincodeStub) PutPrivateDataCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.PutPrivateDataCalls">func (fake *ChaincodeStub) PutPrivateDataCalls(stub func(string, string, []byte) error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.PutPrivateDataReturns">func (fake *ChaincodeStub) PutPrivateDataReturns(result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.PutPrivateDataReturnsOnCall">func (fake *ChaincodeStub) PutPrivateDataReturnsOnCall(i int, result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.PutState">func (fake *ChaincodeStub) PutState(arg1 string, arg2 []byte) error</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.PutStateArgsForCall">func (fake *ChaincodeStub) PutStateArgsForCall(i int) (string, []byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.PutStateCallCount">func (fake *ChaincodeStub) PutStateCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.PutStateCalls">func (fake *ChaincodeStub) PutStateCalls(stub func(string, []byte) error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.PutStateReturns">func (fake *ChaincodeStub) PutStateReturns(result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.PutStateReturnsOnCall">func (fake *ChaincodeStub) PutStateReturnsOnCall(i int, result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetEvent">func (fake *ChaincodeStub) SetEvent(arg1 string, arg2 []byte) error</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetEventArgsForCall">func (fake *ChaincodeStub) SetEventArgsForCall(i int) (string, []byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetEventCallCount">func (fake *ChaincodeStub) SetEventCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetEventCalls">func (fake *ChaincodeStub) SetEventCalls(stub func(string, []byte) error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetEventReturns">func (fake *ChaincodeStub) SetEventReturns(result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetEventReturnsOnCall">func (fake *ChaincodeStub) SetEventReturnsOnCall(i int, result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetPrivateDataValidationParameter">func (fake *ChaincodeStub) SetPrivateDataValidationParameter(arg1 string, arg2 string, arg3 []byte) error</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetPrivateDataValidationParameterArgsForCall">func (fake *ChaincodeStub) SetPrivateDataValidationParameterArgsForCall(i int) (string, string, []byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetPrivateDataValidationParameterCallCount">func (fake *ChaincodeStub) SetPrivateDataValidationParameterCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetPrivateDataValidationParameterCalls">func (fake *ChaincodeStub) SetPrivateDataValidationParameterCalls(stub func(string, string, []byte) error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetPrivateDataValidationParameterReturns">func (fake *ChaincodeStub) SetPrivateDataValidationParameterReturns(result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetPrivateDataValidationParameterReturnsOnCall">func (fake *ChaincodeStub) SetPrivateDataValidationParameterReturnsOnCall(i int, result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetStateValidationParameter">func (fake *ChaincodeStub) SetStateValidationParameter(arg1 string, arg2 []byte) error</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetStateValidationParameterArgsForCall">func (fake *ChaincodeStub) SetStateValidationParameterArgsForCall(i int) (string, []byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetStateValidationParameterCallCount">func (fake *ChaincodeStub) SetStateValidationParameterCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetStateValidationParameterCalls">func (fake *ChaincodeStub) SetStateValidationParameterCalls(stub func(string, []byte) error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetStateValidationParameterReturns">func (fake *ChaincodeStub) SetStateValidationParameterReturns(result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SetStateValidationParameterReturnsOnCall">func (fake *ChaincodeStub) SetStateValidationParameterReturnsOnCall(i int, result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SplitCompositeKey">func (fake *ChaincodeStub) SplitCompositeKey(arg1 string) (string, []string, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SplitCompositeKeyArgsForCall">func (fake *ChaincodeStub) SplitCompositeKeyArgsForCall(i int) string</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SplitCompositeKeyCallCount">func (fake *ChaincodeStub) SplitCompositeKeyCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SplitCompositeKeyCalls">func (fake *ChaincodeStub) SplitCompositeKeyCalls(stub func(string) (string, []string, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SplitCompositeKeyReturns">func (fake *ChaincodeStub) SplitCompositeKeyReturns(result1 string, result2 []string, result3 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ChaincodeStub.SplitCompositeKeyReturnsOnCall">func (fake *ChaincodeStub) SplitCompositeKeyReturnsOnCall(i int, result1 string, result2 []string, result3 error)</a></dd>
				
			
				
				<dd><a href="#ClientIdentity">type ClientIdentity</a></dd>
				
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.AssertAttributeValue">func (fake *ClientIdentity) AssertAttributeValue(arg1 string, arg2 string) error</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.AssertAttributeValueArgsForCall">func (fake *ClientIdentity) AssertAttributeValueArgsForCall(i int) (string, string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.AssertAttributeValueCallCount">func (fake *ClientIdentity) AssertAttributeValueCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.AssertAttributeValueCalls">func (fake *ClientIdentity) AssertAttributeValueCalls(stub func(string, string) error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.AssertAttributeValueReturns">func (fake *ClientIdentity) AssertAttributeValueReturns(result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.AssertAttributeValueReturnsOnCall">func (fake *ClientIdentity) AssertAttributeValueReturnsOnCall(i int, result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetAttributeValue">func (fake *ClientIdentity) GetAttributeValue(arg1 string) (string, bool, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetAttributeValueArgsForCall">func (fake *ClientIdentity) GetAttributeValueArgsForCall(i int) string</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetAttributeValueCallCount">func (fake *ClientIdentity) GetAttributeValueCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetAttributeValueCalls">func (fake *ClientIdentity) GetAttributeValueCalls(stub func(string) (string, bool, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetAttributeValueReturns">func (fake *ClientIdentity) GetAttributeValueReturns(result1 string, result2 bool, result3 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetAttributeValueReturnsOnCall">func (fake *ClientIdentity) GetAttributeValueReturnsOnCall(i int, result1 string, result2 bool, result3 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetID">func (fake *ClientIdentity) GetID() (string, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetIDCallCount">func (fake *ClientIdentity) GetIDCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetIDCalls">func (fake *ClientIdentity) GetIDCalls(stub func() (string, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetIDReturns">func (fake *ClientIdentity) GetIDReturns(result1 string, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetIDReturnsOnCall">func (fake *ClientIdentity) GetIDReturnsOnCall(i int, result1 string, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetMSPID">func (fake *ClientIdentity) GetMSPID() (string, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetMSPIDCallCount">func (fake *ClientIdentity) GetMSPIDCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetMSPIDCalls">func (fake *ClientIdentity) GetMSPIDCalls(stub func() (string, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetMSPIDReturns">func (fake *ClientIdentity) GetMSPIDReturns(result1 string, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetMSPIDReturnsOnCall">func (fake *ClientIdentity) GetMSPIDReturnsOnCall(i int, result1 string, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetX509Certificate">func (fake *ClientIdentity) GetX509Certificate() (*x509.Certificate, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetX509CertificateCallCount">func (fake *ClientIdentity) GetX509CertificateCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetX509CertificateCalls">func (fake *ClientIdentity) GetX509CertificateCalls(stub func() (*x509.Certificate, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetX509CertificateReturns">func (fake *ClientIdentity) GetX509CertificateReturns(result1 *x509.Certificate, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.GetX509CertificateReturnsOnCall">func (fake *ClientIdentity) GetX509CertificateReturnsOnCall(i int, result1 *x509.Certificate, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ClientIdentity.Invocations">func (fake *ClientIdentity) Invocations() map[string][][]interface{}</a></dd>
				
			
				
				<dd><a href="#ContractInterface">type ContractInterface</a></dd>
				
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetAfterTransaction">func (fake *ContractInterface) GetAfterTransaction() interface{}</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetAfterTransactionCallCount">func (fake *ContractInterface) GetAfterTransactionCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetAfterTransactionCalls">func (fake *ContractInterface) GetAfterTransactionCalls(stub func() interface{})</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetAfterTransactionReturns">func (fake *ContractInterface) GetAfterTransactionReturns(result1 interface{})</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetAfterTransactionReturnsOnCall">func (fake *ContractInterface) GetAfterTransactionReturnsOnCall(i int, result1 interface{})</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetBeforeTransaction">func (fake *ContractInterface) GetBeforeTransaction() interface{}</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetBeforeTransactionCallCount">func (fake *ContractInterface) GetBeforeTransactionCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetBeforeTransactionCalls">func (fake *ContractInterface) GetBeforeTransactionCalls(stub func() interface{})</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetBeforeTransactionReturns">func (fake *ContractInterface) GetBeforeTransactionReturns(result1 interface{})</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetBeforeTransactionReturnsOnCall">func (fake *ContractInterface) GetBeforeTransactionReturnsOnCall(i int, result1 interface{})</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetInfo">func (fake *ContractInterface) GetInfo() metadata.InfoMetadata</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetInfoCallCount">func (fake *ContractInterface) GetInfoCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetInfoCalls">func (fake *ContractInterface) GetInfoCalls(stub func() metadata.InfoMetadata)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetInfoReturns">func (fake *ContractInterface) GetInfoReturns(result1 metadata.InfoMetadata)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetInfoReturnsOnCall">func (fake *ContractInterface) GetInfoReturnsOnCall(i int, result1 metadata.InfoMetadata)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetName">func (fake *ContractInterface) GetName() string</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetNameCallCount">func (fake *ContractInterface) GetNameCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetNameCalls">func (fake *ContractInterface) GetNameCalls(stub func() string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetNameReturns">func (fake *ContractInterface) GetNameReturns(result1 string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetNameReturnsOnCall">func (fake *ContractInterface) GetNameReturnsOnCall(i int, result1 string)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetTransactionContextHandler">func (fake *ContractInterface) GetTransactionContextHandler() contractapi.SettableTransactionContextInterface</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetTransactionContextHandlerCallCount">func (fake *ContractInterface) GetTransactionContextHandlerCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetTransactionContextHandlerCalls">func (fake *ContractInterface) GetTransactionContextHandlerCalls(stub func() contractapi.SettableTransactionContextInterface)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetTransactionContextHandlerReturns">func (fake *ContractInterface) GetTransactionContextHandlerReturns(result1 contractapi.SettableTransactionContextInterface)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetTransactionContextHandlerReturnsOnCall">func (fake *ContractInterface) GetTransactionContextHandlerReturnsOnCall(i int, result1 contractapi.SettableTransactionContextInterface)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetUnknownTransaction">func (fake *ContractInterface) GetUnknownTransaction() interface{}</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetUnknownTransactionCallCount">func (fake *ContractInterface) GetUnknownTransactionCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetUnknownTransactionCalls">func (fake *ContractInterface) GetUnknownTransactionCalls(stub func() interface{})</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetUnknownTransactionReturns">func (fake *ContractInterface) GetUnknownTransactionReturns(result1 interface{})</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.GetUnknownTransactionReturnsOnCall">func (fake *ContractInterface) GetUnknownTransactionReturnsOnCall(i int, result1 interface{})</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#ContractInterface.Invocations">func (fake *ContractInterface) Invocations() map[string][][]interface{}</a></dd>
				
			
				
				<dd><a href="#CustomTransactionContext">type CustomTransactionContext</a></dd>
				
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetClientIdentity">func (fake *CustomTransactionContext) GetClientIdentity() cid.ClientIdentity</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetClientIdentityCallCount">func (fake *CustomTransactionContext) GetClientIdentityCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetClientIdentityCalls">func (fake *CustomTransactionContext) GetClientIdentityCalls(stub func() cid.ClientIdentity)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetClientIdentityReturns">func (fake *CustomTransactionContext) GetClientIdentityReturns(result1 cid.ClientIdentity)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetClientIdentityReturnsOnCall">func (fake *CustomTransactionContext) GetClientIdentityReturnsOnCall(i int, result1 cid.ClientIdentity)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetData">func (fake *CustomTransactionContext) GetData() []byte</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetDataCallCount">func (fake *CustomTransactionContext) GetDataCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetDataCalls">func (fake *CustomTransactionContext) GetDataCalls(stub func() []byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetDataReturns">func (fake *CustomTransactionContext) GetDataReturns(result1 []byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetDataReturnsOnCall">func (fake *CustomTransactionContext) GetDataReturnsOnCall(i int, result1 []byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetStub">func (fake *CustomTransactionContext) GetStub() shim.ChaincodeStubInterface</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetStubCallCount">func (fake *CustomTransactionContext) GetStubCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetStubCalls">func (fake *CustomTransactionContext) GetStubCalls(stub func() shim.ChaincodeStubInterface)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetStubReturns">func (fake *CustomTransactionContext) GetStubReturns(result1 shim.ChaincodeStubInterface)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.GetStubReturnsOnCall">func (fake *CustomTransactionContext) GetStubReturnsOnCall(i int, result1 shim.ChaincodeStubInterface)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.Invocations">func (fake *CustomTransactionContext) Invocations() map[string][][]interface{}</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.SetData">func (fake *CustomTransactionContext) SetData(arg1 []byte)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.SetDataArgsForCall">func (fake *CustomTransactionContext) SetDataArgsForCall(i int) []byte</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.SetDataCallCount">func (fake *CustomTransactionContext) SetDataCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#CustomTransactionContext.SetDataCalls">func (fake *CustomTransactionContext) SetDataCalls(stub func([]byte))</a></dd>
				
			
				
				<dd><a href="#HistoryQueryIteratorInterface">type HistoryQueryIteratorInterface</a></dd>
				
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.Close">func (fake *HistoryQueryIteratorInterface) Close() error</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.CloseCallCount">func (fake *HistoryQueryIteratorInterface) CloseCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.CloseCalls">func (fake *HistoryQueryIteratorInterface) CloseCalls(stub func() error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.CloseReturns">func (fake *HistoryQueryIteratorInterface) CloseReturns(result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.CloseReturnsOnCall">func (fake *HistoryQueryIteratorInterface) CloseReturnsOnCall(i int, result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.HasNext">func (fake *HistoryQueryIteratorInterface) HasNext() bool</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.HasNextCallCount">func (fake *HistoryQueryIteratorInterface) HasNextCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.HasNextCalls">func (fake *HistoryQueryIteratorInterface) HasNextCalls(stub func() bool)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.HasNextReturns">func (fake *HistoryQueryIteratorInterface) HasNextReturns(result1 bool)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.HasNextReturnsOnCall">func (fake *HistoryQueryIteratorInterface) HasNextReturnsOnCall(i int, result1 bool)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.Invocations">func (fake *HistoryQueryIteratorInterface) Invocations() map[string][][]interface{}</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.Next">func (fake *HistoryQueryIteratorInterface) Next() (*queryresult.KeyModification, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.NextCallCount">func (fake *HistoryQueryIteratorInterface) NextCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.NextCalls">func (fake *HistoryQueryIteratorInterface) NextCalls(stub func() (*queryresult.KeyModification, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.NextReturns">func (fake *HistoryQueryIteratorInterface) NextReturns(result1 *queryresult.KeyModification, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#HistoryQueryIteratorInterface.NextReturnsOnCall">func (fake *HistoryQueryIteratorInterface) NextReturnsOnCall(i int, result1 *queryresult.KeyModification, result2 error)</a></dd>
				
			
				
				<dd><a href="#SettableTransactionContextInterface">type SettableTransactionContextInterface</a></dd>
				
				
					
					<dd>&nbsp; &nbsp; <a href="#SettableTransactionContextInterface.Invocations">func (fake *SettableTransactionContextInterface) Invocations() map[string][][]interface{}</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#SettableTransactionContextInterface.SetClientIdentity">func (fake *SettableTransactionContextInterface) SetClientIdentity(arg1 cid.ClientIdentity)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#SettableTransactionContextInterface.SetClientIdentityArgsForCall">func (fake *SettableTransactionContextInterface) SetClientIdentityArgsForCall(i int) cid.ClientIdentity</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#SettableTransactionContextInterface.SetClientIdentityCallCount">func (fake *SettableTransactionContextInterface) SetClientIdentityCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#SettableTransactionContextInterface.SetClientIdentityCalls">func (fake *SettableTransactionContextInterface) SetClientIdentityCalls(stub func(cid.ClientIdentity))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#SettableTransactionContextInterface.SetStub">func (fake *SettableTransactionContextInterface) SetStub(arg1 shim.ChaincodeStubInterface)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#SettableTransactionContextInterface.SetStubArgsForCall">func (fake *SettableTransactionContextInterface) SetStubArgsForCall(i int) shim.ChaincodeStubInterface</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#SettableTransactionContextInterface.SetStubCallCount">func (fake *SettableTransactionContextInterface) SetStubCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#SettableTransactionContextInterface.SetStubCalls">func (fake *SettableTransactionContextInterface) SetStubCalls(stub func(shim.ChaincodeStubInterface))</a></dd>
				
			
				
				<dd><a href="#StateQueryIterator">type StateQueryIterator</a></dd>
				
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.Close">func (fake *StateQueryIterator) Close() error</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.CloseCallCount">func (fake *StateQueryIterator) CloseCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.CloseCalls">func (fake *StateQueryIterator) CloseCalls(stub func() error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.CloseReturns">func (fake *StateQueryIterator) CloseReturns(result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.CloseReturnsOnCall">func (fake *StateQueryIterator) CloseReturnsOnCall(i int, result1 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.HasNext">func (fake *StateQueryIterator) HasNext() bool</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.HasNextCallCount">func (fake *StateQueryIterator) HasNextCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.HasNextCalls">func (fake *StateQueryIterator) HasNextCalls(stub func() bool)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.HasNextReturns">func (fake *StateQueryIterator) HasNextReturns(result1 bool)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.HasNextReturnsOnCall">func (fake *StateQueryIterator) HasNextReturnsOnCall(i int, result1 bool)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.Invocations">func (fake *StateQueryIterator) Invocations() map[string][][]interface{}</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.Next">func (fake *StateQueryIterator) Next() (*queryresult.KV, error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.NextCallCount">func (fake *StateQueryIterator) NextCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.NextCalls">func (fake *StateQueryIterator) NextCalls(stub func() (*queryresult.KV, error))</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.NextReturns">func (fake *StateQueryIterator) NextReturns(result1 *queryresult.KV, result2 error)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#StateQueryIterator.NextReturnsOnCall">func (fake *StateQueryIterator) NextReturnsOnCall(i int, result1 *queryresult.KV, result2 error)</a></dd>
				
			
				
				<dd><a href="#TransactionContext">type TransactionContext</a></dd>
				
				
					
					<dd>&nbsp; &nbsp; <a href="#TransactionContext.GetClientIdentity">func (fake *TransactionContext) GetClientIdentity() cid.ClientIdentity</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#TransactionContext.GetClientIdentityCallCount">func (fake *TransactionContext) GetClientIdentityCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#TransactionContext.GetClientIdentityCalls">func (fake *TransactionContext) GetClientIdentityCalls(stub func() cid.ClientIdentity)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#TransactionContext.GetClientIdentityReturns">func (fake *TransactionContext) GetClientIdentityReturns(result1 cid.ClientIdentity)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#TransactionContext.GetClientIdentityReturnsOnCall">func (fake *TransactionContext) GetClientIdentityReturnsOnCall(i int, result1 cid.ClientIdentity)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#TransactionContext.GetStub">func (fake *TransactionContext) GetStub() shim.ChaincodeStubInterface</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#TransactionContext.GetStubCallCount">func (fake *TransactionContext) GetStubCallCount() int</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#TransactionContext.GetStubCalls">func (fake *TransactionContext) GetStubCalls(stub func() shim.ChaincodeStubInterface)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#TransactionContext.GetStubReturns">func (fake *TransactionContext) GetStubReturns(result1 shim.ChaincodeStubInterface)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#TransactionContext.GetStubReturnsOnCall">func (fake *TransactionContext) GetStubReturnsOnCall(i int, result1 shim.ChaincodeStubInterface)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#TransactionContext.Invocations">func (fake *TransactionContext) Invocations() map[string][][]interface{}</a></dd>
				
			
			
			</dl>
			</div><!-- #manual-nav -->

		

		
			<h3>Package files</h3>
			<p>
			<span style="font-size:90%">
			
				<a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go">chaincodestub.go</a>
			
				<a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go">clientIdentity.go</a>
			
				<a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go">contract.go</a>
			
				<a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go">customtransaction.go</a>
			
				<a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go">historyQueryIterator.go</a>
			
				<a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/settabletransactioncontext.go">settabletransactioncontext.go</a>
			
				<a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go">statequeryiterator.go</a>
			
				<a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/transaction.go">transaction.go</a>
			
			</span>
			</p>
		
		</div><!-- .expanded -->
		</div><!-- #pkg-index -->

		

		
		
		
		
			
			
			<h2 id="ChaincodeStub">type <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=238:13440#L2">ChaincodeStub</a>
				<a class="permalink" href="#ChaincodeStub">&#xb6;</a>
				
				
			</h2>
			
			<pre>type ChaincodeStub struct {
<span id="ChaincodeStub.CreateCompositeKeyStub"></span>    CreateCompositeKeyStub func(<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.DelPrivateDataStub"></span>    DelPrivateDataStub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) <a href="/pkg/builtin/#error">error</a>

<span id="ChaincodeStub.DelStateStub"></span>    DelStateStub func(<a href="/pkg/builtin/#string">string</a>) <a href="/pkg/builtin/#error">error</a>

<span id="ChaincodeStub.GetArgsStub"></span>    GetArgsStub func() [][]<a href="/pkg/builtin/#byte">byte</a>

<span id="ChaincodeStub.GetArgsSliceStub"></span>    GetArgsSliceStub func() ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetBindingStub"></span>    GetBindingStub func() ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetChannelIDStub"></span>    GetChannelIDStub func() <a href="/pkg/builtin/#string">string</a>

<span id="ChaincodeStub.GetCreatorStub"></span>    GetCreatorStub func() ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetDecorationsStub"></span>    GetDecorationsStub func() map[<a href="/pkg/builtin/#string">string</a>][]<a href="/pkg/builtin/#byte">byte</a>

<span id="ChaincodeStub.GetFunctionAndParametersStub"></span>    GetFunctionAndParametersStub func() (<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>)

<span id="ChaincodeStub.GetHistoryForKeyStub"></span>    GetHistoryForKeyStub func(<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetPrivateDataStub"></span>    GetPrivateDataStub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetPrivateDataByPartialCompositeKeyStub"></span>    GetPrivateDataByPartialCompositeKeyStub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetPrivateDataByRangeStub"></span>    GetPrivateDataByRangeStub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetPrivateDataHashStub"></span>    GetPrivateDataHashStub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetPrivateDataQueryResultStub"></span>    GetPrivateDataQueryResultStub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetPrivateDataValidationParameterStub"></span>    GetPrivateDataValidationParameterStub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetQueryResultStub"></span>    GetQueryResultStub func(<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetQueryResultWithPaginationStub"></span>    GetQueryResultWithPaginationStub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#int32">int32</a>, <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetSignedProposalStub"></span>    GetSignedProposalStub func() (*<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#SignedProposal">SignedProposal</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetStateStub"></span>    GetStateStub func(<a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetStateByPartialCompositeKeyStub"></span>    GetStateByPartialCompositeKeyStub func(<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationStub"></span>    GetStateByPartialCompositeKeyWithPaginationStub func(<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#int32">int32</a>, <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetStateByRangeStub"></span>    GetStateByRangeStub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetStateByRangeWithPaginationStub"></span>    GetStateByRangeWithPaginationStub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#int32">int32</a>, <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetStateValidationParameterStub"></span>    GetStateValidationParameterStub func(<a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetStringArgsStub"></span>    GetStringArgsStub func() []<a href="/pkg/builtin/#string">string</a>

<span id="ChaincodeStub.GetTransientStub"></span>    GetTransientStub func() (map[<a href="/pkg/builtin/#string">string</a>][]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.GetTxIDStub"></span>    GetTxIDStub func() <a href="/pkg/builtin/#string">string</a>

<span id="ChaincodeStub.GetTxTimestampStub"></span>    GetTxTimestampStub func() (*<a href="/pkg/google.golang.org/protobuf/types/known/timestamppb/">timestamppb</a>.<a href="/pkg/google.golang.org/protobuf/types/known/timestamppb/#Timestamp">Timestamp</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ChaincodeStub.InvokeChaincodeStub"></span>    InvokeChaincodeStub func(<a href="/pkg/builtin/#string">string</a>, [][]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#string">string</a>) <a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#Response">Response</a>

<span id="ChaincodeStub.PutPrivateDataStub"></span>    PutPrivateDataStub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a>

<span id="ChaincodeStub.PutStateStub"></span>    PutStateStub func(<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a>

<span id="ChaincodeStub.SetEventStub"></span>    SetEventStub func(<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a>

<span id="ChaincodeStub.SetPrivateDataValidationParameterStub"></span>    SetPrivateDataValidationParameterStub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a>

<span id="ChaincodeStub.SetStateValidationParameterStub"></span>    SetStateValidationParameterStub func(<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a>

<span id="ChaincodeStub.SplitCompositeKeyStub"></span>    SplitCompositeKeyStub func(<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#error">error</a>)
    <span class="comment">// contains filtered or unexported fields</span>
}
</pre>

			

			

			
			
			

			

			
				
				<h3 id="ChaincodeStub.CreateCompositeKey">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=13442:13531#L487">CreateCompositeKey</a>
					<a class="permalink" href="#ChaincodeStub.CreateCompositeKey">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) CreateCompositeKey(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 []<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.CreateCompositeKeyArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=14692:14774#L524">CreateCompositeKeyArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.CreateCompositeKeyArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) CreateCompositeKeyArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.CreateCompositeKeyCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=14275:14335#L512">CreateCompositeKeyCallCount</a>
					<a class="permalink" href="#ChaincodeStub.CreateCompositeKeyCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) CreateCompositeKeyCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.CreateCompositeKeyCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=14473:14568#L518">CreateCompositeKeyCalls</a>
					<a class="permalink" href="#ChaincodeStub.CreateCompositeKeyCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) CreateCompositeKeyCalls(stub func(<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.CreateCompositeKeyReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=14961:15044#L531">CreateCompositeKeyReturns</a>
					<a class="permalink" href="#ChaincodeStub.CreateCompositeKeyReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) CreateCompositeKeyReturns(result1 <a href="/pkg/builtin/#string">string</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.CreateCompositeKeyReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=15264:15360#L541">CreateCompositeKeyReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.CreateCompositeKeyReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) CreateCompositeKeyReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#string">string</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.DelPrivateData">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=15745:15818#L557">DelPrivateData</a>
					<a class="permalink" href="#ChaincodeStub.DelPrivateData">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) DelPrivateData(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 <a href="/pkg/builtin/#string">string</a>) <a href="/pkg/builtin/#error">error</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.DelPrivateDataArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=16749:16825#L589">DelPrivateDataArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.DelPrivateDataArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) DelPrivateDataArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.DelPrivateDataCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=16376:16432#L577">DelPrivateDataCallCount</a>
					<a class="permalink" href="#ChaincodeStub.DelPrivateDataCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) DelPrivateDataCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.DelPrivateDataCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=16558:16637#L583">DelPrivateDataCalls</a>
					<a class="permalink" href="#ChaincodeStub.DelPrivateDataCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) DelPrivateDataCalls(stub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.DelPrivateDataReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=17000:17063#L596">DelPrivateDataReturns</a>
					<a class="permalink" href="#ChaincodeStub.DelPrivateDataReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) DelPrivateDataReturns(result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.DelPrivateDataReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=17241:17317#L605">DelPrivateDataReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.DelPrivateDataReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) DelPrivateDataReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.DelState">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=17634:17688#L619">DelState</a>
					<a class="permalink" href="#ChaincodeStub.DelState">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) DelState(arg1 <a href="/pkg/builtin/#string">string</a>) <a href="/pkg/builtin/#error">error</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.DelStateArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=18477:18537#L650">DelStateArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.DelStateArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) DelStateArgsForCall(i <a href="/pkg/builtin/#int">int</a>) <a href="/pkg/builtin/#string">string</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.DelStateCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=18160:18210#L638">DelStateCallCount</a>
					<a class="permalink" href="#ChaincodeStub.DelStateCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) DelStateCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.DelStateCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=18318:18383#L644">DelStateCalls</a>
					<a class="permalink" href="#ChaincodeStub.DelStateCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) DelStateCalls(stub func(<a href="/pkg/builtin/#string">string</a>) <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.DelStateReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=18676:18733#L657">DelStateReturns</a>
					<a class="permalink" href="#ChaincodeStub.DelStateReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) DelStateReturns(result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.DelStateReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=18887:18957#L666">DelStateReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.DelStateReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) DelStateReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetArgs">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=19238:19283#L680">GetArgs</a>
					<a class="permalink" href="#ChaincodeStub.GetArgs">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetArgs() [][]<a href="/pkg/builtin/#byte">byte</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetArgsCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=19720:19769#L698">GetArgsCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetArgsCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetArgsCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetArgsCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=19874:19935#L704">GetArgsCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetArgsCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetArgsCalls(stub func() [][]<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetArgsReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=20026:20085#L710">GetArgsReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetArgsReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetArgsReturns(result1 [][]<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetArgsReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=20238:20310#L719">GetArgsReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetArgsReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetArgsReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 [][]<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetArgsSlice">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=20591:20648#L733">GetArgsSlice</a>
					<a class="permalink" href="#ChaincodeStub.GetArgsSlice">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetArgsSlice() ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetArgsSliceCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=21164:21218#L751">GetArgsSliceCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetArgsSliceCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetArgsSliceCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetArgsSliceCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=21338:21411#L757">GetArgsSliceCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetArgsSliceCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetArgsSliceCalls(stub func() ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetArgsSliceReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=21517:21594#L763">GetArgsSliceReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetArgsSliceReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetArgsSliceReturns(result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetArgsSliceReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=21790:21880#L773">GetArgsSliceReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetArgsSliceReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetArgsSliceReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetBinding">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=22229:22284#L789">GetBinding</a>
					<a class="permalink" href="#ChaincodeStub.GetBinding">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetBinding() ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetBindingCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=22782:22834#L807">GetBindingCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetBindingCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetBindingCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetBindingCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=22948:23019#L813">GetBindingCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetBindingCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetBindingCalls(stub func() ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetBindingReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=23119:23194#L819">GetBindingReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetBindingReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetBindingReturns(result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetBindingReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=23382:23470#L829">GetBindingReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetBindingReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetBindingReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetChannelID">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=23807:23855#L845">GetChannelID</a>
					<a class="permalink" href="#ChaincodeStub.GetChannelID">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetChannelID() <a href="/pkg/builtin/#string">string</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetChannelIDCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=24337:24391#L863">GetChannelIDCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetChannelIDCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetChannelIDCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetChannelIDCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=24511:24575#L869">GetChannelIDCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetChannelIDCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetChannelIDCalls(stub func() <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetChannelIDReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=24681:24743#L875">GetChannelIDReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetChannelIDReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetChannelIDReturns(result1 <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetChannelIDReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=24914:24989#L884">GetChannelIDReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetChannelIDReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetChannelIDReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetCreator">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=25296:25351#L898">GetCreator</a>
					<a class="permalink" href="#ChaincodeStub.GetCreator">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetCreator() ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetCreatorCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=25849:25901#L916">GetCreatorCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetCreatorCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetCreatorCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetCreatorCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=26015:26086#L922">GetCreatorCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetCreatorCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetCreatorCalls(stub func() ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetCreatorReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=26186:26261#L928">GetCreatorReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetCreatorReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetCreatorReturns(result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetCreatorReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=26449:26537#L938">GetCreatorReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetCreatorReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetCreatorReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetDecorations">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=26874:26935#L954">GetDecorations</a>
					<a class="permalink" href="#ChaincodeStub.GetDecorations">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetDecorations() map[<a href="/pkg/builtin/#string">string</a>][]<a href="/pkg/builtin/#byte">byte</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetDecorationsCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=27435:27491#L972">GetDecorationsCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetDecorationsCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetDecorationsCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetDecorationsCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=27617:27694#L978">GetDecorationsCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetDecorationsCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetDecorationsCalls(stub func() map[<a href="/pkg/builtin/#string">string</a>][]<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetDecorationsReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=27806:27881#L984">GetDecorationsReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetDecorationsReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetDecorationsReturns(result1 map[<a href="/pkg/builtin/#string">string</a>][]<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetDecorationsReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=28071:28159#L993">GetDecorationsReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetDecorationsReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetDecorationsReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 map[<a href="/pkg/builtin/#string">string</a>][]<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetFunctionAndParameters">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=28500:28572#L1007">GetFunctionAndParameters</a>
					<a class="permalink" href="#ChaincodeStub.GetFunctionAndParameters">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetFunctionAndParameters() (<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetFunctionAndParametersCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=29196:29262#L1025">GetFunctionAndParametersCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetFunctionAndParametersCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetFunctionAndParametersCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetFunctionAndParametersCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=29418:29506#L1031">GetFunctionAndParametersCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetFunctionAndParametersCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetFunctionAndParametersCalls(stub func() (<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetFunctionAndParametersReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=29648:29740#L1037">GetFunctionAndParametersReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetFunctionAndParametersReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetFunctionAndParametersReturns(result1 <a href="/pkg/builtin/#string">string</a>, result2 []<a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetFunctionAndParametersReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=29987:30092#L1047">GetFunctionAndParametersReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetFunctionAndParametersReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetFunctionAndParametersReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#string">string</a>, result2 []<a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetHistoryForKey">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=30519:30619#L1063">GetHistoryForKey</a>
					<a class="permalink" href="#ChaincodeStub.GetHistoryForKey">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetHistoryForKey(arg1 <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetHistoryForKeyArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=31616:31684#L1094">GetHistoryForKeyArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetHistoryForKeyArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetHistoryForKeyArgsForCall(i <a href="/pkg/builtin/#int">int</a>) <a href="/pkg/builtin/#string">string</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetHistoryForKeyCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=31197:31255#L1082">GetHistoryForKeyCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetHistoryForKeyCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetHistoryForKeyCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetHistoryForKeyCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=31387:31498#L1088">GetHistoryForKeyCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetHistoryForKeyCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetHistoryForKeyCalls(stub func(<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetHistoryForKeyReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=31847:31956#L1101">GetHistoryForKeyReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetHistoryForKeyReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetHistoryForKeyReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetHistoryForKeyReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=32196:32318#L1111">GetHistoryForKeyReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetHistoryForKeyReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetHistoryForKeyReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateData">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=32747:32830#L1127">GetPrivateData</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateData">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateData(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 <a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=33805:33881#L1159">GetPrivateDataArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataByPartialCompositeKey">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=34792:34937#L1192">GetPrivateDataByPartialCompositeKey</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataByPartialCompositeKey">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataByPartialCompositeKey(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 <a href="/pkg/builtin/#string">string</a>, arg3 []<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataByPartialCompositeKeyArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=36453:36560#L1230">GetPrivateDataByPartialCompositeKeyArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataByPartialCompositeKeyArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataByPartialCompositeKeyArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataByPartialCompositeKeyCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=35866:35943#L1218">GetPrivateDataByPartialCompositeKeyCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataByPartialCompositeKeyCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataByPartialCompositeKeyCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataByPartialCompositeKeyCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=36132:36278#L1224">GetPrivateDataByPartialCompositeKeyCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataByPartialCompositeKeyCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataByPartialCompositeKeyCalls(stub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataByPartialCompositeKeyReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=36816:36942#L1237">GetPrivateDataByPartialCompositeKeyReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataByPartialCompositeKeyReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataByPartialCompositeKeyReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataByPartialCompositeKeyReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=37256:37395#L1247">GetPrivateDataByPartialCompositeKeyReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataByPartialCompositeKeyReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataByPartialCompositeKeyReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataByRange">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=37934:38063#L1263">GetPrivateDataByRange</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataByRange">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataByRange(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 <a href="/pkg/builtin/#string">string</a>, arg3 <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataByRangeArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=39223:39314#L1296">GetPrivateDataByRangeArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataByRangeArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataByRangeArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataByRangeCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=38750:38813#L1284">GetPrivateDataByRangeCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataByRangeCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataByRangeCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataByRangeCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=38960:39090#L1290">GetPrivateDataByRangeCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataByRangeCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataByRangeCalls(stub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataByRangeReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=39528:39640#L1303">GetPrivateDataByRangeReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataByRangeReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataByRangeReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataByRangeReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=39898:40023#L1313">GetPrivateDataByRangeReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataByRangeReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataByRangeReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=33422:33478#L1147">GetPrivateDataCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=33604:33693#L1153">GetPrivateDataCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataCalls(stub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataHash">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=40478:40565#L1329">GetPrivateDataHash</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataHash">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataHash(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 <a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataHashArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=41608:41688#L1361">GetPrivateDataHashArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataHashArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataHashArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataHashCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=41193:41253#L1349">GetPrivateDataHashCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataHashCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataHashCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataHashCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=41391:41484#L1355">GetPrivateDataHashCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataHashCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataHashCalls(stub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataHashReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=41875:41958#L1368">GetPrivateDataHashReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataHashReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataHashReturns(result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataHashReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=42178:42274#L1378">GetPrivateDataHashReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataHashReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataHashReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataQueryResult">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=42659:42779#L1394">GetPrivateDataQueryResult</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataQueryResult">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataQueryResult(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataQueryResultArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=43967:44054#L1426">GetPrivateDataQueryResultArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataQueryResultArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataQueryResultArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataQueryResultCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=43470:43537#L1414">GetPrivateDataQueryResultCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataQueryResultCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataQueryResultCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataQueryResultCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=43696:43822#L1420">GetPrivateDataQueryResultCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataQueryResultCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataQueryResultCalls(stub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataQueryResultReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=44262:44378#L1433">GetPrivateDataQueryResultReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataQueryResultReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataQueryResultReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataQueryResultReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=44652:44781#L1443">GetPrivateDataQueryResultReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataQueryResultReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataQueryResultReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=34056:34135#L1166">GetPrivateDataReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataReturns(result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=34339:34431#L1176">GetPrivateDataReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataValidationParameter">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=45260:45362#L1459">GetPrivateDataValidationParameter</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataValidationParameter">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataValidationParameter(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 <a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataValidationParameterArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=46660:46755#L1491">GetPrivateDataValidationParameterArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataValidationParameterArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataValidationParameterArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataValidationParameterCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=46125:46200#L1479">GetPrivateDataValidationParameterCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataValidationParameterCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataValidationParameterCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataValidationParameterCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=46383:46491#L1485">GetPrivateDataValidationParameterCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataValidationParameterCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataValidationParameterCalls(stub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataValidationParameterReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=46987:47085#L1498">GetPrivateDataValidationParameterReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataValidationParameterReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataValidationParameterReturns(result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetPrivateDataValidationParameterReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=47365:47476#L1508">GetPrivateDataValidationParameterReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetPrivateDataValidationParameterReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetPrivateDataValidationParameterReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetQueryResult">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=47951:48047#L1524">GetQueryResult</a>
					<a class="permalink" href="#ChaincodeStub.GetQueryResult">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetQueryResult(arg1 <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetQueryResultArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=49008:49074#L1555">GetQueryResultArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetQueryResultArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetQueryResultArgsForCall(i <a href="/pkg/builtin/#int">int</a>) <a href="/pkg/builtin/#string">string</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetQueryResultCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=48607:48663#L1543">GetQueryResultCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetQueryResultCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetQueryResultCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetQueryResultCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=48789:48896#L1549">GetQueryResultCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetQueryResultCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetQueryResultCalls(stub func(<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetQueryResultReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=49231:49336#L1562">GetQueryResultReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetQueryResultReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetQueryResultReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetQueryResultReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=49566:49684#L1572">GetQueryResultReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetQueryResultReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetQueryResultReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetQueryResultWithPagination">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=50097:50261#L1588">GetQueryResultWithPagination</a>
					<a class="permalink" href="#ChaincodeStub.GetQueryResultWithPagination">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetQueryResultWithPagination(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 <a href="/pkg/builtin/#int32">int32</a>, arg3 <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetQueryResultWithPaginationArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=51601:51698#L1621">GetQueryResultWithPaginationArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetQueryResultWithPaginationArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetQueryResultWithPaginationArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#int32">int32</a>, <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetQueryResultWithPaginationCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=51044:51114#L1609">GetQueryResultWithPaginationCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetQueryResultWithPaginationCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetQueryResultWithPaginationCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetQueryResultWithPaginationCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=51282:51447#L1615">GetQueryResultWithPaginationCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetQueryResultWithPaginationCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetQueryResultWithPaginationCalls(stub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#int32">int32</a>, <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetQueryResultWithPaginationReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=51933:52089#L1628">GetQueryResultWithPaginationReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetQueryResultWithPaginationReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetQueryResultWithPaginationReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, result3 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetQueryResultWithPaginationReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=52422:52591#L1639">GetQueryResultWithPaginationReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetQueryResultWithPaginationReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetQueryResultWithPaginationReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, result3 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetSignedProposal">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=53174:53250#L1657">GetSignedProposal</a>
					<a class="permalink" href="#ChaincodeStub.GetSignedProposal">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetSignedProposal() (*<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#SignedProposal">SignedProposal</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetSignedProposalCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=53811:53870#L1675">GetSignedProposalCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetSignedProposalCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetSignedProposalCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetSignedProposalCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=54005:54097#L1681">GetSignedProposalCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetSignedProposalCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetSignedProposalCalls(stub func() (*<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#SignedProposal">SignedProposal</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetSignedProposalReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=54218:54314#L1687">GetSignedProposalReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetSignedProposalReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetSignedProposalReturns(result1 *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#SignedProposal">SignedProposal</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetSignedProposalReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=54544:54653#L1697">GetSignedProposalReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetSignedProposalReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetSignedProposalReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#SignedProposal">SignedProposal</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetState">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=55060:55124#L1713">GetState</a>
					<a class="permalink" href="#ChaincodeStub.GetState">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetState(arg1 <a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=55957:56017#L1744">GetStateArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetStateArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateArgsForCall(i <a href="/pkg/builtin/#int">int</a>) <a href="/pkg/builtin/#string">string</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByPartialCompositeKey">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=56820:56946#L1777">GetStateByPartialCompositeKey</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByPartialCompositeKey">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByPartialCompositeKey(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 []<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByPartialCompositeKeyArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=58320:58413#L1814">GetStateByPartialCompositeKeyArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByPartialCompositeKeyArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByPartialCompositeKeyArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByPartialCompositeKeyCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=57789:57860#L1802">GetStateByPartialCompositeKeyCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByPartialCompositeKeyCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByPartialCompositeKeyCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByPartialCompositeKeyCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=58031:58163#L1808">GetStateByPartialCompositeKeyCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByPartialCompositeKeyCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByPartialCompositeKeyCalls(stub func(<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByPartialCompositeKeyReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=58633:58753#L1821">GetStateByPartialCompositeKeyReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByPartialCompositeKeyReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByPartialCompositeKeyReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByPartialCompositeKeyReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=59043:59176#L1831">GetStateByPartialCompositeKeyReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByPartialCompositeKeyReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByPartialCompositeKeyReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByPartialCompositeKeyWithPagination">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=59679:59873#L1847">GetStateByPartialCompositeKeyWithPagination</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByPartialCompositeKeyWithPagination">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByPartialCompositeKeyWithPagination(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 []<a href="/pkg/builtin/#string">string</a>, arg3 <a href="/pkg/builtin/#int32">int32</a>, arg4 <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=61626:61748#L1886">GetStateByPartialCompositeKeyWithPaginationArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByPartialCompositeKeyWithPaginationArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#int32">int32</a>, <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=60939:61024#L1874">GetStateByPartialCompositeKeyWithPaginationCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByPartialCompositeKeyWithPaginationCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=61237:61427#L1880">GetStateByPartialCompositeKeyWithPaginationCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByPartialCompositeKeyWithPaginationCalls(stub func(<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#int32">int32</a>, <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=62046:62217#L1893">GetStateByPartialCompositeKeyWithPaginationReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByPartialCompositeKeyWithPaginationReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, result3 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=62610:62794#L1904">GetStateByPartialCompositeKeyWithPaginationReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByPartialCompositeKeyWithPaginationReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByPartialCompositeKeyWithPaginationReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, result3 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByRange">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=63467:63577#L1922">GetStateByRange</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByRange">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByRange(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByRangeArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=64595:64672#L1954">GetStateByRangeArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByRangeArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByRangeArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByRangeCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=64178:64235#L1942">GetStateByRangeCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByRangeCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByRangeCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByRangeCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=64364:64480#L1948">GetStateByRangeCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByRangeCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByRangeCalls(stub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByRangeReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=64850:64956#L1961">GetStateByRangeReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByRangeReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByRangeReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByRangeReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=65190:65309#L1971">GetStateByRangeReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByRangeReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByRangeReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByRangeWithPagination">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=65728:65906#L1987">GetStateByRangeWithPagination</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByRangeWithPagination">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByRangeWithPagination(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 <a href="/pkg/builtin/#string">string</a>, arg3 <a href="/pkg/builtin/#int32">int32</a>, arg4 <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByRangeWithPaginationArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=67303:67409#L2021">GetStateByRangeWithPaginationArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByRangeWithPaginationArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByRangeWithPaginationArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#int32">int32</a>, <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByRangeWithPaginationCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=66730:66801#L2009">GetStateByRangeWithPaginationCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByRangeWithPaginationCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByRangeWithPaginationCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByRangeWithPaginationCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=66972:67146#L2015">GetStateByRangeWithPaginationCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByRangeWithPaginationCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByRangeWithPaginationCalls(stub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#int32">int32</a>, <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByRangeWithPaginationReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=67665:67822#L2028">GetStateByRangeWithPaginationReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByRangeWithPaginationReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByRangeWithPaginationReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, result3 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateByRangeWithPaginationReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=68159:68329#L2039">GetStateByRangeWithPaginationReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetStateByRangeWithPaginationReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateByRangeWithPaginationReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#StateQueryIteratorInterface">StateQueryIteratorInterface</a>, result2 *<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#QueryResponseMetadata">QueryResponseMetadata</a>, result3 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=55630:55680#L1732">GetStateCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetStateCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=55788:55863#L1738">GetStateCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetStateCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateCalls(stub func(<a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=56156:56229#L1751">GetStateReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetStateReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateReturns(result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=56409:56495#L1761">GetStateReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetStateReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateValidationParameter">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=68918:69001#L2057">GetStateValidationParameter</a>
					<a class="permalink" href="#ChaincodeStub.GetStateValidationParameter">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateValidationParameter(arg1 <a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateValidationParameterArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=70157:70236#L2088">GetStateValidationParameterArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.GetStateValidationParameterArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateValidationParameterArgsForCall(i <a href="/pkg/builtin/#int">int</a>) <a href="/pkg/builtin/#string">string</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateValidationParameterCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=69678:69747#L2076">GetStateValidationParameterCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetStateValidationParameterCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateValidationParameterCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateValidationParameterCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=69912:70006#L2082">GetStateValidationParameterCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetStateValidationParameterCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateValidationParameterCalls(stub func(<a href="/pkg/builtin/#string">string</a>) ([]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateValidationParameterReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=70432:70524#L2095">GetStateValidationParameterReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetStateValidationParameterReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateValidationParameterReturns(result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStateValidationParameterReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=70780:70885#L2105">GetStateValidationParameterReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetStateValidationParameterReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStateValidationParameterReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 []<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStringArgs">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=71324:71375#L2121">GetStringArgs</a>
					<a class="permalink" href="#ChaincodeStub.GetStringArgs">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStringArgs() []<a href="/pkg/builtin/#string">string</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStringArgsCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=71866:71921#L2139">GetStringArgsCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetStringArgsCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStringArgsCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStringArgsCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=72044:72111#L2145">GetStringArgsCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetStringArgsCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStringArgsCalls(stub func() []<a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStringArgsReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=72220:72285#L2151">GetStringArgsReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetStringArgsReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStringArgsReturns(result1 []<a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetStringArgsReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=72462:72540#L2160">GetStringArgsReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetStringArgsReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetStringArgsReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 []<a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTransient">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=72857:72925#L2174">GetTransient</a>
					<a class="permalink" href="#ChaincodeStub.GetTransient">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTransient() (map[<a href="/pkg/builtin/#string">string</a>][]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTransientCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=73441:73495#L2192">GetTransientCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetTransientCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTransientCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTransientCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=73615:73699#L2198">GetTransientCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetTransientCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTransientCalls(stub func() (map[<a href="/pkg/builtin/#string">string</a>][]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTransientReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=73805:73893#L2204">GetTransientReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetTransientReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTransientReturns(result1 map[<a href="/pkg/builtin/#string">string</a>][]<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTransientReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=74100:74201#L2214">GetTransientReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetTransientReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTransientReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 map[<a href="/pkg/builtin/#string">string</a>][]<a href="/pkg/builtin/#byte">byte</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTxID">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=74572:74615#L2230">GetTxID</a>
					<a class="permalink" href="#ChaincodeStub.GetTxID">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTxID() <a href="/pkg/builtin/#string">string</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTxIDCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=75052:75101#L2248">GetTxIDCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetTxIDCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTxIDCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTxIDCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=75206:75265#L2254">GetTxIDCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetTxIDCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTxIDCalls(stub func() <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTxIDReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=75356:75413#L2260">GetTxIDReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetTxIDReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTxIDReturns(result1 <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTxIDReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=75564:75634#L2269">GetTxIDReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetTxIDReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTxIDReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTxTimestamp">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=75911:75986#L2283">GetTxTimestamp</a>
					<a class="permalink" href="#ChaincodeStub.GetTxTimestamp">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTxTimestamp() (*<a href="/pkg/google.golang.org/protobuf/types/known/timestamppb/">timestamppb</a>.<a href="/pkg/google.golang.org/protobuf/types/known/timestamppb/#Timestamp">Timestamp</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTxTimestampCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=76520:76576#L2301">GetTxTimestampCallCount</a>
					<a class="permalink" href="#ChaincodeStub.GetTxTimestampCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTxTimestampCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTxTimestampCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=76702:76793#L2307">GetTxTimestampCalls</a>
					<a class="permalink" href="#ChaincodeStub.GetTxTimestampCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTxTimestampCalls(stub func() (*<a href="/pkg/google.golang.org/protobuf/types/known/timestamppb/">timestamppb</a>.<a href="/pkg/google.golang.org/protobuf/types/known/timestamppb/#Timestamp">Timestamp</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTxTimestampReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=76905:77000#L2313">GetTxTimestampReturns</a>
					<a class="permalink" href="#ChaincodeStub.GetTxTimestampReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTxTimestampReturns(result1 *<a href="/pkg/google.golang.org/protobuf/types/known/timestamppb/">timestamppb</a>.<a href="/pkg/google.golang.org/protobuf/types/known/timestamppb/#Timestamp">Timestamp</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.GetTxTimestampReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=77220:77328#L2323">GetTxTimestampReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.GetTxTimestampReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) GetTxTimestampReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 *<a href="/pkg/google.golang.org/protobuf/types/known/timestamppb/">timestamppb</a>.<a href="/pkg/google.golang.org/protobuf/types/known/timestamppb/#Timestamp">Timestamp</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.Invocations">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=92966:93033#L2811">Invocations</a>
					<a class="permalink" href="#ChaincodeStub.Invocations">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) Invocations() map[<a href="/pkg/builtin/#string">string</a>][][]interface{}</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.InvokeChaincode">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=77721:77818#L2339">InvokeChaincode</a>
					<a class="permalink" href="#ChaincodeStub.InvokeChaincode">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) InvokeChaincode(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 [][]<a href="/pkg/builtin/#byte">byte</a>, arg3 <a href="/pkg/builtin/#string">string</a>) <a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#Response">Response</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.InvokeChaincodeArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=78932:79019#L2377">InvokeChaincodeArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.InvokeChaincodeArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) InvokeChaincodeArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, [][]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.InvokeChaincodeCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=78533:78590#L2365">InvokeChaincodeCallCount</a>
					<a class="permalink" href="#ChaincodeStub.InvokeChaincodeCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) InvokeChaincodeCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.InvokeChaincodeCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=78719:78817#L2371">InvokeChaincodeCalls</a>
					<a class="permalink" href="#ChaincodeStub.InvokeChaincodeCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) InvokeChaincodeCalls(stub func(<a href="/pkg/builtin/#string">string</a>, [][]<a href="/pkg/builtin/#byte">byte</a>, <a href="/pkg/builtin/#string">string</a>) <a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#Response">Response</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.InvokeChaincodeReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=79215:79287#L2384">InvokeChaincodeReturns</a>
					<a class="permalink" href="#ChaincodeStub.InvokeChaincodeReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) InvokeChaincodeReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#Response">Response</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.InvokeChaincodeReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=79477:79562#L2393">InvokeChaincodeReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.InvokeChaincodeReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) InvokeChaincodeReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/">peer</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/peer/#Response">Response</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.PutPrivateData">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=79901:79987#L2407">PutPrivateData</a>
					<a class="permalink" href="#ChaincodeStub.PutPrivateData">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) PutPrivateData(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 <a href="/pkg/builtin/#string">string</a>, arg3 []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.PutPrivateDataArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=81068:81152#L2445">PutPrivateDataArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.PutPrivateDataArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) PutPrivateDataArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.PutPrivateDataCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=80687:80743#L2433">PutPrivateDataCallCount</a>
					<a class="permalink" href="#ChaincodeStub.PutPrivateDataCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) PutPrivateDataCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.PutPrivateDataCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=80869:80956#L2439">PutPrivateDataCalls</a>
					<a class="permalink" href="#ChaincodeStub.PutPrivateDataCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) PutPrivateDataCalls(stub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.PutPrivateDataReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=81345:81408#L2452">PutPrivateDataReturns</a>
					<a class="permalink" href="#ChaincodeStub.PutPrivateDataReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) PutPrivateDataReturns(result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.PutPrivateDataReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=81586:81662#L2461">PutPrivateDataReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.PutPrivateDataReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) PutPrivateDataReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.PutState">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=81979:82046#L2475">PutState</a>
					<a class="permalink" href="#ChaincodeStub.PutState">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) PutState(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.PutStateArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=82985:83055#L2512">PutStateArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.PutStateArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) PutStateArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.PutStateCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=82660:82710#L2500">PutStateCallCount</a>
					<a class="permalink" href="#ChaincodeStub.PutStateCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) PutStateCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.PutStateCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=82818:82891#L2506">PutStateCalls</a>
					<a class="permalink" href="#ChaincodeStub.PutStateCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) PutStateCalls(stub func(<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.PutStateReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=83212:83269#L2519">PutStateReturns</a>
					<a class="permalink" href="#ChaincodeStub.PutStateReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) PutStateReturns(result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.PutStateReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=83423:83493#L2528">PutStateReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.PutStateReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) PutStateReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetEvent">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=83774:83841#L2542">SetEvent</a>
					<a class="permalink" href="#ChaincodeStub.SetEvent">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetEvent(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetEventArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=84780:84850#L2579">SetEventArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.SetEventArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetEventArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetEventCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=84455:84505#L2567">SetEventCallCount</a>
					<a class="permalink" href="#ChaincodeStub.SetEventCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetEventCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetEventCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=84613:84686#L2573">SetEventCalls</a>
					<a class="permalink" href="#ChaincodeStub.SetEventCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetEventCalls(stub func(<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetEventReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=85007:85064#L2586">SetEventReturns</a>
					<a class="permalink" href="#ChaincodeStub.SetEventReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetEventReturns(result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetEventReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=85218:85288#L2595">SetEventReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.SetEventReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetEventReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetPrivateDataValidationParameter">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=85569:85674#L2609">SetPrivateDataValidationParameter</a>
					<a class="permalink" href="#ChaincodeStub.SetPrivateDataValidationParameter">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetPrivateDataValidationParameter(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 <a href="/pkg/builtin/#string">string</a>, arg3 []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetPrivateDataValidationParameterArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=87078:87181#L2647">SetPrivateDataValidationParameterArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.SetPrivateDataValidationParameterArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetPrivateDataValidationParameterArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetPrivateDataValidationParameterCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=86545:86620#L2635">SetPrivateDataValidationParameterCallCount</a>
					<a class="permalink" href="#ChaincodeStub.SetPrivateDataValidationParameterCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetPrivateDataValidationParameterCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetPrivateDataValidationParameterCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=86803:86909#L2641">SetPrivateDataValidationParameterCalls</a>
					<a class="permalink" href="#ChaincodeStub.SetPrivateDataValidationParameterCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetPrivateDataValidationParameterCalls(stub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetPrivateDataValidationParameterReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=87431:87513#L2654">SetPrivateDataValidationParameterReturns</a>
					<a class="permalink" href="#ChaincodeStub.SetPrivateDataValidationParameterReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetPrivateDataValidationParameterReturns(result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetPrivateDataValidationParameterReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=87767:87862#L2663">SetPrivateDataValidationParameterReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.SetPrivateDataValidationParameterReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetPrivateDataValidationParameterReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetStateValidationParameter">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=88293:88379#L2677">SetStateValidationParameter</a>
					<a class="permalink" href="#ChaincodeStub.SetStateValidationParameter">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetStateValidationParameter(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetStateValidationParameterArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=89641:89730#L2714">SetStateValidationParameterArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.SetStateValidationParameterArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetStateValidationParameterArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetStateValidationParameterCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=89164:89233#L2702">SetStateValidationParameterCallCount</a>
					<a class="permalink" href="#ChaincodeStub.SetStateValidationParameterCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetStateValidationParameterCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetStateValidationParameterCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=89398:89490#L2708">SetStateValidationParameterCalls</a>
					<a class="permalink" href="#ChaincodeStub.SetStateValidationParameterCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetStateValidationParameterCalls(stub func(<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#byte">byte</a>) <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetStateValidationParameterReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=89944:90020#L2721">SetStateValidationParameterReturns</a>
					<a class="permalink" href="#ChaincodeStub.SetStateValidationParameterReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetStateValidationParameterReturns(result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SetStateValidationParameterReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=90250:90339#L2730">SetStateValidationParameterReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.SetStateValidationParameterReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SetStateValidationParameterReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SplitCompositeKey">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=90734:90817#L2744">SplitCompositeKey</a>
					<a class="permalink" href="#ChaincodeStub.SplitCompositeKey">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SplitCompositeKey(arg1 <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SplitCompositeKeyArgsForCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=91847:91916#L2775">SplitCompositeKeyArgsForCall</a>
					<a class="permalink" href="#ChaincodeStub.SplitCompositeKeyArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SplitCompositeKeyArgsForCall(i <a href="/pkg/builtin/#int">int</a>) <a href="/pkg/builtin/#string">string</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SplitCompositeKeyCallCount">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=91438:91497#L2763">SplitCompositeKeyCallCount</a>
					<a class="permalink" href="#ChaincodeStub.SplitCompositeKeyCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SplitCompositeKeyCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SplitCompositeKeyCalls">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=91632:91726#L2769">SplitCompositeKeyCalls</a>
					<a class="permalink" href="#ChaincodeStub.SplitCompositeKeyCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SplitCompositeKeyCalls(stub func(<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/builtin/#string">string</a>, []<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SplitCompositeKeyReturns">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=92082:92182#L2782">SplitCompositeKeyReturns</a>
					<a class="permalink" href="#ChaincodeStub.SplitCompositeKeyReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SplitCompositeKeyReturns(result1 <a href="/pkg/builtin/#string">string</a>, result2 []<a href="/pkg/builtin/#string">string</a>, result3 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ChaincodeStub.SplitCompositeKeyReturnsOnCall">func (*ChaincodeStub) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/chaincodestub.go?s=92426:92539#L2793">SplitCompositeKeyReturnsOnCall</a>
					<a class="permalink" href="#ChaincodeStub.SplitCompositeKeyReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ChaincodeStub">ChaincodeStub</a>) SplitCompositeKeyReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#string">string</a>, result2 []<a href="/pkg/builtin/#string">string</a>, result3 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
		
			
			
			<h2 id="ClientIdentity">type <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=99:1687#L1">ClientIdentity</a>
				<a class="permalink" href="#ClientIdentity">&#xb6;</a>
				
				
			</h2>
			
			<pre>type ClientIdentity struct {
<span id="ClientIdentity.AssertAttributeValueStub"></span>    AssertAttributeValueStub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) <a href="/pkg/builtin/#error">error</a>

<span id="ClientIdentity.GetAttributeValueStub"></span>    GetAttributeValueStub func(<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#bool">bool</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ClientIdentity.GetIDStub"></span>    GetIDStub func() (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ClientIdentity.GetMSPIDStub"></span>    GetMSPIDStub func() (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#error">error</a>)

<span id="ClientIdentity.GetX509CertificateStub"></span>    GetX509CertificateStub func() (*<a href="/pkg/crypto/x509/">x509</a>.<a href="/pkg/crypto/x509/#Certificate">Certificate</a>, <a href="/pkg/builtin/#error">error</a>)
    <span class="comment">// contains filtered or unexported fields</span>
}
</pre>

			

			

			
			
			

			

			
				
				<h3 id="ClientIdentity.AssertAttributeValue">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=1689:1769#L67">AssertAttributeValue</a>
					<a class="permalink" href="#ClientIdentity.AssertAttributeValue">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) AssertAttributeValue(arg1 <a href="/pkg/builtin/#string">string</a>, arg2 <a href="/pkg/builtin/#string">string</a>) <a href="/pkg/builtin/#error">error</a></pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.AssertAttributeValueArgsForCall">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=2804:2887#L99">AssertAttributeValueArgsForCall</a>
					<a class="permalink" href="#ClientIdentity.AssertAttributeValueArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) AssertAttributeValueArgsForCall(i <a href="/pkg/builtin/#int">int</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.AssertAttributeValueCallCount">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=2381:2444#L87">AssertAttributeValueCallCount</a>
					<a class="permalink" href="#ClientIdentity.AssertAttributeValueCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) AssertAttributeValueCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.AssertAttributeValueCalls">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=2588:2674#L93">AssertAttributeValueCalls</a>
					<a class="permalink" href="#ClientIdentity.AssertAttributeValueCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) AssertAttributeValueCalls(stub func(<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#string">string</a>) <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.AssertAttributeValueReturns">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=3080:3150#L106">AssertAttributeValueReturns</a>
					<a class="permalink" href="#ClientIdentity.AssertAttributeValueReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) AssertAttributeValueReturns(result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.AssertAttributeValueReturnsOnCall">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=3352:3435#L115">AssertAttributeValueReturnsOnCall</a>
					<a class="permalink" href="#ClientIdentity.AssertAttributeValueReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) AssertAttributeValueReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetAttributeValue">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=3788:3868#L129">GetAttributeValue</a>
					<a class="permalink" href="#ClientIdentity.GetAttributeValue">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetAttributeValue(arg1 <a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#bool">bool</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetAttributeValueArgsForCall">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=4896:4966#L160">GetAttributeValueArgsForCall</a>
					<a class="permalink" href="#ClientIdentity.GetAttributeValueArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetAttributeValueArgsForCall(i <a href="/pkg/builtin/#int">int</a>) <a href="/pkg/builtin/#string">string</a></pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetAttributeValueCallCount">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=4489:4549#L148">GetAttributeValueCallCount</a>
					<a class="permalink" href="#ClientIdentity.GetAttributeValueCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetAttributeValueCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetAttributeValueCalls">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=4684:4775#L154">GetAttributeValueCalls</a>
					<a class="permalink" href="#ClientIdentity.GetAttributeValueCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetAttributeValueCalls(stub func(<a href="/pkg/builtin/#string">string</a>) (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#bool">bool</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetAttributeValueReturns">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=5132:5229#L167">GetAttributeValueReturns</a>
					<a class="permalink" href="#ClientIdentity.GetAttributeValueReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetAttributeValueReturns(result1 <a href="/pkg/builtin/#string">string</a>, result2 <a href="/pkg/builtin/#bool">bool</a>, result3 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetAttributeValueReturnsOnCall">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=5469:5579#L178">GetAttributeValueReturnsOnCall</a>
					<a class="permalink" href="#ClientIdentity.GetAttributeValueReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetAttributeValueReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#string">string</a>, result2 <a href="/pkg/builtin/#bool">bool</a>, result3 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetID">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=5998:6049#L196">GetID</a>
					<a class="permalink" href="#ClientIdentity.GetID">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetID() (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetIDCallCount">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=6502:6550#L214">GetIDCallCount</a>
					<a class="permalink" href="#ClientIdentity.GetIDCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetIDCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetIDCalls">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=6649:6716#L220">GetIDCalls</a>
					<a class="permalink" href="#ClientIdentity.GetIDCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetIDCalls(stub func() (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetIDReturns">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=6801:6872#L226">GetIDReturns</a>
					<a class="permalink" href="#ClientIdentity.GetIDReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetIDReturns(result1 <a href="/pkg/builtin/#string">string</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetIDReturnsOnCall">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=7040:7124#L236">GetIDReturnsOnCall</a>
					<a class="permalink" href="#ClientIdentity.GetIDReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetIDReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#string">string</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetMSPID">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=7431:7485#L252">GetMSPID</a>
					<a class="permalink" href="#ClientIdentity.GetMSPID">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetMSPID() (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetMSPIDCallCount">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=7965:8016#L270">GetMSPIDCallCount</a>
					<a class="permalink" href="#ClientIdentity.GetMSPIDCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetMSPIDCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetMSPIDCalls">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=8124:8194#L276">GetMSPIDCalls</a>
					<a class="permalink" href="#ClientIdentity.GetMSPIDCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetMSPIDCalls(stub func() (<a href="/pkg/builtin/#string">string</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetMSPIDReturns">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=8288:8362#L282">GetMSPIDReturns</a>
					<a class="permalink" href="#ClientIdentity.GetMSPIDReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetMSPIDReturns(result1 <a href="/pkg/builtin/#string">string</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetMSPIDReturnsOnCall">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=8542:8629#L292">GetMSPIDReturnsOnCall</a>
					<a class="permalink" href="#ClientIdentity.GetMSPIDReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetMSPIDReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#string">string</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetX509Certificate">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=8954:9029#L308">GetX509Certificate</a>
					<a class="permalink" href="#ClientIdentity.GetX509Certificate">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetX509Certificate() (*<a href="/pkg/crypto/x509/">x509</a>.<a href="/pkg/crypto/x509/#Certificate">Certificate</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetX509CertificateCallCount">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=9599:9660#L326">GetX509CertificateCallCount</a>
					<a class="permalink" href="#ClientIdentity.GetX509CertificateCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetX509CertificateCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetX509CertificateCalls">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=9798:9889#L332">GetX509CertificateCalls</a>
					<a class="permalink" href="#ClientIdentity.GetX509CertificateCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetX509CertificateCalls(stub func() (*<a href="/pkg/crypto/x509/">x509</a>.<a href="/pkg/crypto/x509/#Certificate">Certificate</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetX509CertificateReturns">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=10013:10108#L338">GetX509CertificateReturns</a>
					<a class="permalink" href="#ClientIdentity.GetX509CertificateReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetX509CertificateReturns(result1 *<a href="/pkg/crypto/x509/">x509</a>.<a href="/pkg/crypto/x509/#Certificate">Certificate</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.GetX509CertificateReturnsOnCall">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=10339:10447#L348">GetX509CertificateReturnsOnCall</a>
					<a class="permalink" href="#ClientIdentity.GetX509CertificateReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) GetX509CertificateReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 *<a href="/pkg/crypto/x509/">x509</a>.<a href="/pkg/crypto/x509/#Certificate">Certificate</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="ClientIdentity.Invocations">func (*ClientIdentity) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/clientIdentity.go?s=10854:10922#L364">Invocations</a>
					<a class="permalink" href="#ClientIdentity.Invocations">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ClientIdentity">ClientIdentity</a>) Invocations() map[<a href="/pkg/builtin/#string">string</a>][][]interface{}</pre>
				
				
				
				
			
		
			
			
			<h2 id="ContractInterface">type <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=204:2056#L1">ContractInterface</a>
				<a class="permalink" href="#ContractInterface">&#xb6;</a>
				
				
			</h2>
			
			<pre>type ContractInterface struct {
<span id="ContractInterface.GetAfterTransactionStub"></span>    GetAfterTransactionStub func() interface{}

<span id="ContractInterface.GetBeforeTransactionStub"></span>    GetBeforeTransactionStub func() interface{}

<span id="ContractInterface.GetInfoStub"></span>    GetInfoStub func() <a href="/pkg/github.com/hyperledger/fabric-contract-api-go/metadata/">metadata</a>.<a href="/pkg/github.com/hyperledger/fabric-contract-api-go/metadata/#InfoMetadata">InfoMetadata</a>

<span id="ContractInterface.GetNameStub"></span>    GetNameStub func() <a href="/pkg/builtin/#string">string</a>

<span id="ContractInterface.GetTransactionContextHandlerStub"></span>    GetTransactionContextHandlerStub func() <a href="/pkg/github.com/hyperledger/fabric-contract-api-go/contractapi/">contractapi</a>.<a href="/pkg/github.com/hyperledger/fabric-contract-api-go/contractapi/#SettableTransactionContextInterface">SettableTransactionContextInterface</a>

<span id="ContractInterface.GetUnknownTransactionStub"></span>    GetUnknownTransactionStub func() interface{}
    <span class="comment">// contains filtered or unexported fields</span>
}
</pre>

			

			

			
			
			

			

			
				
				<h3 id="ContractInterface.GetAfterTransaction">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=2058:2122#L66">GetAfterTransaction</a>
					<a class="permalink" href="#ContractInterface.GetAfterTransaction">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetAfterTransaction() interface{}</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetAfterTransactionCallCount">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=2667:2732#L84">GetAfterTransactionCallCount</a>
					<a class="permalink" href="#ContractInterface.GetAfterTransactionCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetAfterTransactionCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetAfterTransactionCalls">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=2873:2953#L90">GetAfterTransactionCalls</a>
					<a class="permalink" href="#ContractInterface.GetAfterTransactionCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetAfterTransactionCalls(stub func() interface{})</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetAfterTransactionReturns">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=3080:3158#L96">GetAfterTransactionReturns</a>
					<a class="permalink" href="#ContractInterface.GetAfterTransactionReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetAfterTransactionReturns(result1 interface{})</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetAfterTransactionReturnsOnCall">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=3362:3453#L105">GetAfterTransactionReturnsOnCall</a>
					<a class="permalink" href="#ContractInterface.GetAfterTransactionReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetAfterTransactionReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 interface{})</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetBeforeTransaction">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=3812:3877#L119">GetBeforeTransaction</a>
					<a class="permalink" href="#ContractInterface.GetBeforeTransaction">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetBeforeTransaction() interface{}</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetBeforeTransactionCallCount">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=4431:4497#L137">GetBeforeTransactionCallCount</a>
					<a class="permalink" href="#ContractInterface.GetBeforeTransactionCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetBeforeTransactionCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetBeforeTransactionCalls">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=4641:4722#L143">GetBeforeTransactionCalls</a>
					<a class="permalink" href="#ContractInterface.GetBeforeTransactionCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetBeforeTransactionCalls(stub func() interface{})</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetBeforeTransactionReturns">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=4852:4931#L149">GetBeforeTransactionReturns</a>
					<a class="permalink" href="#ContractInterface.GetBeforeTransactionReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetBeforeTransactionReturns(result1 interface{})</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetBeforeTransactionReturnsOnCall">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=5139:5231#L158">GetBeforeTransactionReturnsOnCall</a>
					<a class="permalink" href="#ContractInterface.GetBeforeTransactionReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetBeforeTransactionReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 interface{})</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetInfo">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=5596:5658#L172">GetInfo</a>
					<a class="permalink" href="#ContractInterface.GetInfo">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetInfo() <a href="/pkg/github.com/hyperledger/fabric-contract-api-go/metadata/">metadata</a>.<a href="/pkg/github.com/hyperledger/fabric-contract-api-go/metadata/#InfoMetadata">InfoMetadata</a></pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetInfoCallCount">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=6095:6148#L190">GetInfoCallCount</a>
					<a class="permalink" href="#ContractInterface.GetInfoCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetInfoCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetInfoCalls">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=6253:6331#L196">GetInfoCalls</a>
					<a class="permalink" href="#ContractInterface.GetInfoCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetInfoCalls(stub func() <a href="/pkg/github.com/hyperledger/fabric-contract-api-go/metadata/">metadata</a>.<a href="/pkg/github.com/hyperledger/fabric-contract-api-go/metadata/#InfoMetadata">InfoMetadata</a>)</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetInfoReturns">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=6422:6498#L202">GetInfoReturns</a>
					<a class="permalink" href="#ContractInterface.GetInfoReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetInfoReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-contract-api-go/metadata/">metadata</a>.<a href="/pkg/github.com/hyperledger/fabric-contract-api-go/metadata/#InfoMetadata">InfoMetadata</a>)</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetInfoReturnsOnCall">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=6664:6753#L211">GetInfoReturnsOnCall</a>
					<a class="permalink" href="#ContractInterface.GetInfoReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetInfoReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-contract-api-go/metadata/">metadata</a>.<a href="/pkg/github.com/hyperledger/fabric-contract-api-go/metadata/#InfoMetadata">InfoMetadata</a>)</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetName">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=7060:7107#L225">GetName</a>
					<a class="permalink" href="#ContractInterface.GetName">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetName() <a href="/pkg/builtin/#string">string</a></pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetNameCallCount">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=7544:7597#L243">GetNameCallCount</a>
					<a class="permalink" href="#ContractInterface.GetNameCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetNameCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetNameCalls">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=7702:7765#L249">GetNameCalls</a>
					<a class="permalink" href="#ContractInterface.GetNameCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetNameCalls(stub func() <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetNameReturns">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=7856:7917#L255">GetNameReturns</a>
					<a class="permalink" href="#ContractInterface.GetNameReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetNameReturns(result1 <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetNameReturnsOnCall">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=8068:8142#L264">GetNameReturnsOnCall</a>
					<a class="permalink" href="#ContractInterface.GetNameReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetNameReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#string">string</a>)</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetTransactionContextHandler">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=8419:8528#L278">GetTransactionContextHandler</a>
					<a class="permalink" href="#ContractInterface.GetTransactionContextHandler">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetTransactionContextHandler() <a href="/pkg/github.com/hyperledger/fabric-contract-api-go/contractapi/">contractapi</a>.<a href="/pkg/github.com/hyperledger/fabric-contract-api-go/contractapi/#SettableTransactionContextInterface">SettableTransactionContextInterface</a></pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetTransactionContextHandlerCallCount">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=9154:9228#L296">GetTransactionContextHandlerCallCount</a>
					<a class="permalink" href="#ContractInterface.GetTransactionContextHandlerCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetTransactionContextHandlerCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetTransactionContextHandlerCalls">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=9396:9521#L302">GetTransactionContextHandlerCalls</a>
					<a class="permalink" href="#ContractInterface.GetTransactionContextHandlerCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetTransactionContextHandlerCalls(stub func() <a href="/pkg/github.com/hyperledger/fabric-contract-api-go/contractapi/">contractapi</a>.<a href="/pkg/github.com/hyperledger/fabric-contract-api-go/contractapi/#SettableTransactionContextInterface">SettableTransactionContextInterface</a>)</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetTransactionContextHandlerReturns">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=9675:9798#L308">GetTransactionContextHandlerReturns</a>
					<a class="permalink" href="#ContractInterface.GetTransactionContextHandlerReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetTransactionContextHandlerReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-contract-api-go/contractapi/">contractapi</a>.<a href="/pkg/github.com/hyperledger/fabric-contract-api-go/contractapi/#SettableTransactionContextInterface">SettableTransactionContextInterface</a>)</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetTransactionContextHandlerReturnsOnCall">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=10074:10210#L317">GetTransactionContextHandlerReturnsOnCall</a>
					<a class="permalink" href="#ContractInterface.GetTransactionContextHandlerReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetTransactionContextHandlerReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-contract-api-go/contractapi/">contractapi</a>.<a href="/pkg/github.com/hyperledger/fabric-contract-api-go/contractapi/#SettableTransactionContextInterface">SettableTransactionContextInterface</a>)</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetUnknownTransaction">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=10695:10761#L331">GetUnknownTransaction</a>
					<a class="permalink" href="#ContractInterface.GetUnknownTransaction">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetUnknownTransaction() interface{}</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetUnknownTransactionCallCount">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=11324:11391#L349">GetUnknownTransactionCallCount</a>
					<a class="permalink" href="#ContractInterface.GetUnknownTransactionCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetUnknownTransactionCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetUnknownTransactionCalls">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=11538:11620#L355">GetUnknownTransactionCalls</a>
					<a class="permalink" href="#ContractInterface.GetUnknownTransactionCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetUnknownTransactionCalls(stub func() interface{})</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetUnknownTransactionReturns">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=11753:11833#L361">GetUnknownTransactionReturns</a>
					<a class="permalink" href="#ContractInterface.GetUnknownTransactionReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetUnknownTransactionReturns(result1 interface{})</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.GetUnknownTransactionReturnsOnCall">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=12045:12138#L370">GetUnknownTransactionReturnsOnCall</a>
					<a class="permalink" href="#ContractInterface.GetUnknownTransactionReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) GetUnknownTransactionReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 interface{})</pre>
				
				
				
				
			
				
				<h3 id="ContractInterface.Invocations">func (*ContractInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/contract.go?s=12509:12580#L384">Invocations</a>
					<a class="permalink" href="#ContractInterface.Invocations">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#ContractInterface">ContractInterface</a>) Invocations() map[<a href="/pkg/builtin/#string">string</a>][][]interface{}</pre>
				
				
				
				
			
		
			
			
			<h2 id="CustomTransactionContext">type <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=190:1184#L1">CustomTransactionContext</a>
				<a class="permalink" href="#CustomTransactionContext">&#xb6;</a>
				
				
			</h2>
			
			<pre>type CustomTransactionContext struct {
<span id="CustomTransactionContext.GetClientIdentityStub"></span>    GetClientIdentityStub func() <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a>

<span id="CustomTransactionContext.GetDataStub"></span>    GetDataStub func() []<a href="/pkg/builtin/#byte">byte</a>

<span id="CustomTransactionContext.GetStubStub"></span>    GetStubStub func() <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a>

<span id="CustomTransactionContext.SetDataStub"></span>    SetDataStub func([]<a href="/pkg/builtin/#byte">byte</a>)
    <span class="comment">// contains filtered or unexported fields</span>
}
</pre>

			

			

			
			
			

			

			
				
				<h3 id="CustomTransactionContext.GetClientIdentity">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=1186:1262#L41">GetClientIdentity</a>
					<a class="permalink" href="#CustomTransactionContext.GetClientIdentity">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetClientIdentity() <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a></pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetClientIdentityCallCount">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=1789:1859#L59">GetClientIdentityCallCount</a>
					<a class="permalink" href="#CustomTransactionContext.GetClientIdentityCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetClientIdentityCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetClientIdentityCalls">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=1994:2086#L65">GetClientIdentityCalls</a>
					<a class="permalink" href="#CustomTransactionContext.GetClientIdentityCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetClientIdentityCalls(stub func() <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a>)</pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetClientIdentityReturns">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=2207:2297#L71">GetClientIdentityReturns</a>
					<a class="permalink" href="#CustomTransactionContext.GetClientIdentityReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetClientIdentityReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a>)</pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetClientIdentityReturnsOnCall">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=2500:2603#L80">GetClientIdentityReturnsOnCall</a>
					<a class="permalink" href="#CustomTransactionContext.GetClientIdentityReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetClientIdentityReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a>)</pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetData">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=2964:3018#L94">GetData</a>
					<a class="permalink" href="#CustomTransactionContext.GetData">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetData() []<a href="/pkg/builtin/#byte">byte</a></pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetDataCallCount">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=3455:3515#L112">GetDataCallCount</a>
					<a class="permalink" href="#CustomTransactionContext.GetDataCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetDataCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetDataCalls">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=3620:3690#L118">GetDataCalls</a>
					<a class="permalink" href="#CustomTransactionContext.GetDataCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetDataCalls(stub func() []<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetDataReturns">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=3781:3849#L124">GetDataReturns</a>
					<a class="permalink" href="#CustomTransactionContext.GetDataReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetDataReturns(result1 []<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetDataReturnsOnCall">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=4000:4081#L133">GetDataReturnsOnCall</a>
					<a class="permalink" href="#CustomTransactionContext.GetDataReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetDataReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 []<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetStub">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=4358:4433#L147">GetStub</a>
					<a class="permalink" href="#CustomTransactionContext.GetStub">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetStub() <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a></pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetStubCallCount">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=4870:4930#L165">GetStubCallCount</a>
					<a class="permalink" href="#CustomTransactionContext.GetStubCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetStubCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetStubCalls">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=5035:5126#L171">GetStubCalls</a>
					<a class="permalink" href="#CustomTransactionContext.GetStubCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetStubCalls(stub func() <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a>)</pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetStubReturns">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=5217:5306#L177">GetStubReturns</a>
					<a class="permalink" href="#CustomTransactionContext.GetStubReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetStubReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a>)</pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.GetStubReturnsOnCall">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=5478:5580#L186">GetStubReturnsOnCall</a>
					<a class="permalink" href="#CustomTransactionContext.GetStubReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) GetStubReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a>)</pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.Invocations">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=6877:6955#L237">Invocations</a>
					<a class="permalink" href="#CustomTransactionContext.Invocations">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) Invocations() map[<a href="/pkg/builtin/#string">string</a>][][]interface{}</pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.SetData">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=5899:5957#L200">SetData</a>
					<a class="permalink" href="#CustomTransactionContext.SetData">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) SetData(arg1 []<a href="/pkg/builtin/#byte">byte</a>)</pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.SetDataArgsForCall">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=6671:6741#L230">SetDataArgsForCall</a>
					<a class="permalink" href="#CustomTransactionContext.SetDataArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) SetDataArgsForCall(i <a href="/pkg/builtin/#int">int</a>) []<a href="/pkg/builtin/#byte">byte</a></pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.SetDataCallCount">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=6346:6406#L218">SetDataCallCount</a>
					<a class="permalink" href="#CustomTransactionContext.SetDataCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) SetDataCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="CustomTransactionContext.SetDataCalls">func (*CustomTransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/customtransaction.go?s=6511:6580#L224">SetDataCalls</a>
					<a class="permalink" href="#CustomTransactionContext.SetDataCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#CustomTransactionContext">CustomTransactionContext</a>) SetDataCalls(stub func([]<a href="/pkg/builtin/#byte">byte</a>))</pre>
				
				
				
				
			
		
			
			
			<h2 id="HistoryQueryIteratorInterface">type <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=147:956#L1">HistoryQueryIteratorInterface</a>
				<a class="permalink" href="#HistoryQueryIteratorInterface">&#xb6;</a>
				
				
			</h2>
			
			<pre>type HistoryQueryIteratorInterface struct {
<span id="HistoryQueryIteratorInterface.CloseStub"></span>    CloseStub func() <a href="/pkg/builtin/#error">error</a>

<span id="HistoryQueryIteratorInterface.HasNextStub"></span>    HasNextStub func() <a href="/pkg/builtin/#bool">bool</a>

<span id="HistoryQueryIteratorInterface.NextStub"></span>    NextStub func() (*<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/">queryresult</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/#KeyModification">KeyModification</a>, <a href="/pkg/builtin/#error">error</a>)
    <span class="comment">// contains filtered or unexported fields</span>
}
</pre>

			

			

			
			
			

			

			
				
				<h3 id="HistoryQueryIteratorInterface.Close">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=958:1014#L37">Close</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.Close">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) Close() <a href="/pkg/builtin/#error">error</a></pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.CloseCallCount">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=1433:1496#L55">CloseCallCount</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.CloseCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) CloseCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.CloseCalls">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=1595:1667#L61">CloseCalls</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.CloseCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) CloseCalls(stub func() <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.CloseReturns">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=1752:1822#L67">CloseReturns</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.CloseReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) CloseReturns(result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.CloseReturnsOnCall">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=1964:2047#L76">CloseReturnsOnCall</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.CloseReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) CloseReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.HasNext">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=2310:2367#L90">HasNext</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.HasNext">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) HasNext() <a href="/pkg/builtin/#bool">bool</a></pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.HasNextCallCount">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=2804:2869#L108">HasNextCallCount</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.HasNextCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) HasNextCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.HasNextCalls">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=2974:3047#L114">HasNextCalls</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.HasNextCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) HasNextCalls(stub func() <a href="/pkg/builtin/#bool">bool</a>)</pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.HasNextReturns">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=3138:3209#L120">HasNextReturns</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.HasNextReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) HasNextReturns(result1 <a href="/pkg/builtin/#bool">bool</a>)</pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.HasNextReturnsOnCall">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=3358:3442#L129">HasNextReturnsOnCall</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.HasNextReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) HasNextReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#bool">bool</a>)</pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.Invocations">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=5347:5430#L199">Invocations</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.Invocations">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) Invocations() map[<a href="/pkg/builtin/#string">string</a>][][]interface{}</pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.Next">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=3715:3802#L143">Next</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.Next">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) Next() (*<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/">queryresult</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/#KeyModification">KeyModification</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.NextCallCount">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=4246:4308#L161">NextCallCount</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.NextCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) NextCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.NextCalls">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=4404:4507#L167">NextCalls</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.NextCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) NextCalls(stub func() (*<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/">queryresult</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/#KeyModification">KeyModification</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.NextReturns">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=4589:4696#L173">NextReturns</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.NextReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) NextReturns(result1 *<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/">queryresult</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/#KeyModification">KeyModification</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="HistoryQueryIteratorInterface.NextReturnsOnCall">func (*HistoryQueryIteratorInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/historyQueryIterator.go?s=4882:5002#L183">NextReturnsOnCall</a>
					<a class="permalink" href="#HistoryQueryIteratorInterface.NextReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#HistoryQueryIteratorInterface">HistoryQueryIteratorInterface</a>) NextReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 *<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/">queryresult</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/#KeyModification">KeyModification</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
		
			
			
			<h2 id="SettableTransactionContextInterface">type <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/settabletransactioncontext.go?s=190:641#L1">SettableTransactionContextInterface</a>
				<a class="permalink" href="#SettableTransactionContextInterface">&#xb6;</a>
				
				
			</h2>
			
			<pre>type SettableTransactionContextInterface struct {
<span id="SettableTransactionContextInterface.SetClientIdentityStub"></span>    SetClientIdentityStub func(<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a>)

<span id="SettableTransactionContextInterface.SetStubStub"></span>    SetStubStub func(<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a>)
    <span class="comment">// contains filtered or unexported fields</span>
}
</pre>

			

			

			
			
			

			

			
				
				<h3 id="SettableTransactionContextInterface.Invocations">func (*SettableTransactionContextInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/settabletransactioncontext.go?s=2799:2888#L80">Invocations</a>
					<a class="permalink" href="#SettableTransactionContextInterface.Invocations">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#SettableTransactionContextInterface">SettableTransactionContextInterface</a>) Invocations() map[<a href="/pkg/builtin/#string">string</a>][][]interface{}</pre>
				
				
				
				
			
				
				<h3 id="SettableTransactionContextInterface.SetClientIdentity">func (*SettableTransactionContextInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/settabletransactioncontext.go?s=643:734#L16">SetClientIdentity</a>
					<a class="permalink" href="#SettableTransactionContextInterface.SetClientIdentity">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#SettableTransactionContextInterface">SettableTransactionContextInterface</a>) SetClientIdentity(arg1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a>)</pre>
				
				
				
				
			
				
				<h3 id="SettableTransactionContextInterface.SetClientIdentityArgsForCall">func (*SettableTransactionContextInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/settabletransactioncontext.go?s=1534:1637#L41">SetClientIdentityArgsForCall</a>
					<a class="permalink" href="#SettableTransactionContextInterface.SetClientIdentityArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#SettableTransactionContextInterface">SettableTransactionContextInterface</a>) SetClientIdentityArgsForCall(i <a href="/pkg/builtin/#int">int</a>) <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a></pre>
				
				
				
				
			
				
				<h3 id="SettableTransactionContextInterface.SetClientIdentityCallCount">func (*SettableTransactionContextInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/settabletransactioncontext.go?s=1095:1176#L29">SetClientIdentityCallCount</a>
					<a class="permalink" href="#SettableTransactionContextInterface.SetClientIdentityCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#SettableTransactionContextInterface">SettableTransactionContextInterface</a>) SetClientIdentityCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="SettableTransactionContextInterface.SetClientIdentityCalls">func (*SettableTransactionContextInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/settabletransactioncontext.go?s=1311:1413#L35">SetClientIdentityCalls</a>
					<a class="permalink" href="#SettableTransactionContextInterface.SetClientIdentityCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#SettableTransactionContextInterface">SettableTransactionContextInterface</a>) SetClientIdentityCalls(stub func(<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a>))</pre>
				
				
				
				
			
				
				<h3 id="SettableTransactionContextInterface.SetStub">func (*SettableTransactionContextInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/settabletransactioncontext.go?s=1803:1893#L48">SetStub</a>
					<a class="permalink" href="#SettableTransactionContextInterface.SetStub">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#SettableTransactionContextInterface">SettableTransactionContextInterface</a>) SetStub(arg1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a>)</pre>
				
				
				
				
			
				
				<h3 id="SettableTransactionContextInterface.SetStubArgsForCall">func (*SettableTransactionContextInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/settabletransactioncontext.go?s=2561:2663#L73">SetStubArgsForCall</a>
					<a class="permalink" href="#SettableTransactionContextInterface.SetStubArgsForCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#SettableTransactionContextInterface">SettableTransactionContextInterface</a>) SetStubArgsForCall(i <a href="/pkg/builtin/#int">int</a>) <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a></pre>
				
				
				
				
			
				
				<h3 id="SettableTransactionContextInterface.SetStubCallCount">func (*SettableTransactionContextInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/settabletransactioncontext.go?s=2193:2264#L61">SetStubCallCount</a>
					<a class="permalink" href="#SettableTransactionContextInterface.SetStubCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#SettableTransactionContextInterface">SettableTransactionContextInterface</a>) SetStubCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="SettableTransactionContextInterface.SetStubCalls">func (*SettableTransactionContextInterface) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/settabletransactioncontext.go?s=2369:2470#L67">SetStubCalls</a>
					<a class="permalink" href="#SettableTransactionContextInterface.SetStubCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#SettableTransactionContextInterface">SettableTransactionContextInterface</a>) SetStubCalls(stub func(<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a>))</pre>
				
				
				
				
			
		
			
			
			<h2 id="StateQueryIterator">type <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=147:906#L1">StateQueryIterator</a>
				<a class="permalink" href="#StateQueryIterator">&#xb6;</a>
				
				
			</h2>
			
			<pre>type StateQueryIterator struct {
<span id="StateQueryIterator.CloseStub"></span>    CloseStub func() <a href="/pkg/builtin/#error">error</a>

<span id="StateQueryIterator.HasNextStub"></span>    HasNextStub func() <a href="/pkg/builtin/#bool">bool</a>

<span id="StateQueryIterator.NextStub"></span>    NextStub func() (*<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/">queryresult</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/#KV">KV</a>, <a href="/pkg/builtin/#error">error</a>)
    <span class="comment">// contains filtered or unexported fields</span>
}
</pre>

			

			

			
			
			

			

			
				
				<h3 id="StateQueryIterator.Close">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=908:953#L37">Close</a>
					<a class="permalink" href="#StateQueryIterator.Close">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) Close() <a href="/pkg/builtin/#error">error</a></pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.CloseCallCount">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=1372:1424#L55">CloseCallCount</a>
					<a class="permalink" href="#StateQueryIterator.CloseCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) CloseCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.CloseCalls">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=1523:1584#L61">CloseCalls</a>
					<a class="permalink" href="#StateQueryIterator.CloseCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) CloseCalls(stub func() <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.CloseReturns">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=1669:1728#L67">CloseReturns</a>
					<a class="permalink" href="#StateQueryIterator.CloseReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) CloseReturns(result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.CloseReturnsOnCall">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=1870:1942#L76">CloseReturnsOnCall</a>
					<a class="permalink" href="#StateQueryIterator.CloseReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) CloseReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.HasNext">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=2205:2251#L90">HasNext</a>
					<a class="permalink" href="#StateQueryIterator.HasNext">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) HasNext() <a href="/pkg/builtin/#bool">bool</a></pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.HasNextCallCount">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=2688:2742#L108">HasNextCallCount</a>
					<a class="permalink" href="#StateQueryIterator.HasNextCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) HasNextCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.HasNextCalls">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=2847:2909#L114">HasNextCalls</a>
					<a class="permalink" href="#StateQueryIterator.HasNextCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) HasNextCalls(stub func() <a href="/pkg/builtin/#bool">bool</a>)</pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.HasNextReturns">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=3000:3060#L120">HasNextReturns</a>
					<a class="permalink" href="#StateQueryIterator.HasNextReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) HasNextReturns(result1 <a href="/pkg/builtin/#bool">bool</a>)</pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.HasNextReturnsOnCall">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=3209:3282#L129">HasNextReturnsOnCall</a>
					<a class="permalink" href="#StateQueryIterator.HasNextReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) HasNextReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/builtin/#bool">bool</a>)</pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.Invocations">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=5041:5113#L199">Invocations</a>
					<a class="permalink" href="#StateQueryIterator.Invocations">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) Invocations() map[<a href="/pkg/builtin/#string">string</a>][][]interface{}</pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.Next">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=3555:3618#L143">Next</a>
					<a class="permalink" href="#StateQueryIterator.Next">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) Next() (*<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/">queryresult</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/#KV">KV</a>, <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.NextCallCount">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=4062:4113#L161">NextCallCount</a>
					<a class="permalink" href="#StateQueryIterator.NextCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) NextCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.NextCalls">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=4209:4288#L167">NextCalls</a>
					<a class="permalink" href="#StateQueryIterator.NextCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) NextCalls(stub func() (*<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/">queryresult</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/#KV">KV</a>, <a href="/pkg/builtin/#error">error</a>))</pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.NextReturns">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=4370:4453#L173">NextReturns</a>
					<a class="permalink" href="#StateQueryIterator.NextReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) NextReturns(result1 *<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/">queryresult</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/#KV">KV</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
				
				<h3 id="StateQueryIterator.NextReturnsOnCall">func (*StateQueryIterator) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/statequeryiterator.go?s=4626:4722#L183">NextReturnsOnCall</a>
					<a class="permalink" href="#StateQueryIterator.NextReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#StateQueryIterator">StateQueryIterator</a>) NextReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 *<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/">queryresult</a>.<a href="/pkg/github.com/hyperledger/fabric-protos-go/ledger/queryresult/#KV">KV</a>, result2 <a href="/pkg/builtin/#error">error</a>)</pre>
				
				
				
				
			
		
			
			
			<h2 id="TransactionContext">type <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/transaction.go?s=190:859#L1">TransactionContext</a>
				<a class="permalink" href="#TransactionContext">&#xb6;</a>
				
				
			</h2>
			
			<pre>type TransactionContext struct {
<span id="TransactionContext.GetClientIdentityStub"></span>    GetClientIdentityStub func() <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a>

<span id="TransactionContext.GetStubStub"></span>    GetStubStub func() <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a>
    <span class="comment">// contains filtered or unexported fields</span>
}
</pre>

			

			

			
			
			

			

			
				
				<h3 id="TransactionContext.GetClientIdentity">func (*TransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/transaction.go?s=861:931#L26">GetClientIdentity</a>
					<a class="permalink" href="#TransactionContext.GetClientIdentity">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#TransactionContext">TransactionContext</a>) GetClientIdentity() <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a></pre>
				
				
				
				
			
				
				<h3 id="TransactionContext.GetClientIdentityCallCount">func (*TransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/transaction.go?s=1458:1522#L44">GetClientIdentityCallCount</a>
					<a class="permalink" href="#TransactionContext.GetClientIdentityCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#TransactionContext">TransactionContext</a>) GetClientIdentityCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="TransactionContext.GetClientIdentityCalls">func (*TransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/transaction.go?s=1657:1743#L50">GetClientIdentityCalls</a>
					<a class="permalink" href="#TransactionContext.GetClientIdentityCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#TransactionContext">TransactionContext</a>) GetClientIdentityCalls(stub func() <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a>)</pre>
				
				
				
				
			
				
				<h3 id="TransactionContext.GetClientIdentityReturns">func (*TransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/transaction.go?s=1864:1948#L56">GetClientIdentityReturns</a>
					<a class="permalink" href="#TransactionContext.GetClientIdentityReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#TransactionContext">TransactionContext</a>) GetClientIdentityReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a>)</pre>
				
				
				
				
			
				
				<h3 id="TransactionContext.GetClientIdentityReturnsOnCall">func (*TransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/transaction.go?s=2151:2248#L65">GetClientIdentityReturnsOnCall</a>
					<a class="permalink" href="#TransactionContext.GetClientIdentityReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#TransactionContext">TransactionContext</a>) GetClientIdentityReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/">cid</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/pkg/cid/#ClientIdentity">ClientIdentity</a>)</pre>
				
				
				
				
			
				
				<h3 id="TransactionContext.GetStub">func (*TransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/transaction.go?s=2609:2678#L79">GetStub</a>
					<a class="permalink" href="#TransactionContext.GetStub">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#TransactionContext">TransactionContext</a>) GetStub() <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a></pre>
				
				
				
				
			
				
				<h3 id="TransactionContext.GetStubCallCount">func (*TransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/transaction.go?s=3115:3169#L97">GetStubCallCount</a>
					<a class="permalink" href="#TransactionContext.GetStubCallCount">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#TransactionContext">TransactionContext</a>) GetStubCallCount() <a href="/pkg/builtin/#int">int</a></pre>
				
				
				
				
			
				
				<h3 id="TransactionContext.GetStubCalls">func (*TransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/transaction.go?s=3274:3359#L103">GetStubCalls</a>
					<a class="permalink" href="#TransactionContext.GetStubCalls">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#TransactionContext">TransactionContext</a>) GetStubCalls(stub func() <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a>)</pre>
				
				
				
				
			
				
				<h3 id="TransactionContext.GetStubReturns">func (*TransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/transaction.go?s=3450:3533#L109">GetStubReturns</a>
					<a class="permalink" href="#TransactionContext.GetStubReturns">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#TransactionContext">TransactionContext</a>) GetStubReturns(result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a>)</pre>
				
				
				
				
			
				
				<h3 id="TransactionContext.GetStubReturnsOnCall">func (*TransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/transaction.go?s=3705:3801#L118">GetStubReturnsOnCall</a>
					<a class="permalink" href="#TransactionContext.GetStubReturnsOnCall">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#TransactionContext">TransactionContext</a>) GetStubReturnsOnCall(i <a href="/pkg/builtin/#int">int</a>, result1 <a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/">shim</a>.<a href="/pkg/github.com/hyperledger/fabric-chaincode-go/shim/#ChaincodeStubInterface">ChaincodeStubInterface</a>)</pre>
				
				
				
				
			
				
				<h3 id="TransactionContext.Invocations">func (*TransactionContext) <a href="/src/github.com/kmilodenisglez/cc-identity-go/testing/mocks/transaction.go?s=4120:4192#L132">Invocations</a>
					<a class="permalink" href="#TransactionContext.Invocations">&#xb6;</a>
					
					
				</h3>
				<pre>func (fake *<a href="#TransactionContext">TransactionContext</a>) Invocations() map[<a href="/pkg/builtin/#string">string</a>][][]interface{}</pre>
				
				
				
				
			
		
	

	







<div id="footer">
Build version go1.16.3.<br>
Except as <a href="https://developers.google.com/site-policies#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="https://golang.org/doc/tos.html">Terms of Service</a> |
<a href="https://www.google.com/intl/en/policies/privacy/">Privacy Policy</a>
</div>

</div><!-- .container -->
</div><!-- #page -->
</body>
</html>
